import{d as v,b as k,Y as D,u as b,n as F,c as p,e as T,h as t,o as x,f as B,w as d,g as i,ao as S,ap as q,q as E,aq as M,ar as N,E as y,ad as f}from"./index.51b7df8a.js";import{u as V}from"./usePageTitle.5f1ff030.js";const $=v({__name:"FlowRunCreate",setup(Y){const u=k(),a=D("id"),n=b(),w=F(u.deployments.getDeployment,[a]),e=p(()=>w.response),_=async s=>{var r,o,c;try{const l=await u.deployments.createDeploymentFlowRun(a.value,s),m=(c=(o=(r=s.state)==null?void 0:r.stateDetails)==null?void 0:o.scheduledTime)!=null?c:void 0,g=!m,C=M(N,{flowRun:l,flowRunRoute:y.flowRun,router:n,immediate:g,startTime:m});f(C,"success"),n.push(y.deployment(a.value))}catch(l){f("Something went wrong trying to create a flow run","error"),console.error(l)}},h=()=>{n.back()},R=p(()=>e.value?`Create Flow Run for Deployment: ${e.value.name}`:"Create Flow Run for Deployment");return V(R),(s,r)=>{const o=T("p-layout-default");return t(e)?(x(),B(o,{key:0},{header:d(()=>[i(t(S),{deployment:t(e)},null,8,["deployment"])]),default:d(()=>[i(t(q),{deployment:t(e),onSubmit:_,onCancel:h},null,8,["deployment"])]),_:1})):E("",!0)}}});export{$ as default};
