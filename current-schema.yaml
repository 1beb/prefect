components:
  schemas:
    BlockDocument:
      description: An ORM representation of a block document.
      properties:
        block_document_references:
          additionalProperties:
            type: object
          description: Record of the block document's references
          title: Block Document References
          type: object
        block_schema:
          allOf:
          - $ref: '#/components/schemas/BlockSchema'
          description: The associated block schema
          title: Block Schema
        block_schema_id:
          description: A block schema ID
          format: uuid
          title: Block Schema Id
          type: string
        block_type:
          allOf:
          - $ref: '#/components/schemas/BlockType'
          description: The associated block type
          title: Block Type
        block_type_id:
          description: A block type ID
          format: uuid
          title: Block Type Id
          type: string
        created:
          format: date-time
          title: Created
          type: string
        data:
          description: The block document's data
          title: Data
          type: object
        id:
          format: uuid
          title: Id
          type: string
        is_anonymous:
          default: false
          description: Whether the block is anonymous (anonymous blocks are usually
            created by Prefect automatically)
          title: Is Anonymous
          type: boolean
        name:
          description: The block document's name. Not required for anonymous block
            documents.
          title: Name
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
      required:
      - block_schema_id
      - block_type_id
      title: BlockDocument
      type: object
    BlockDocumentCreate:
      additionalProperties: false
      description: Data used by the Orion API to create a block document.
      properties:
        block_schema_id:
          description: A block schema ID
          format: uuid
          title: Block Schema Id
          type: string
        block_type_id:
          description: A block type ID
          format: uuid
          title: Block Type Id
          type: string
        data:
          description: The block document's data
          title: Data
          type: object
        is_anonymous:
          default: false
          description: Whether the block is anonymous (anonymous blocks are usually
            created by Prefect automatically)
          title: Is Anonymous
          type: boolean
        name:
          description: The block document's name. Not required for anonymous block
            documents.
          title: Name
          type: string
      required:
      - block_schema_id
      - block_type_id
      title: BlockDocumentCreate
      type: object
    BlockDocumentFilter:
      additionalProperties: false
      description: Filter BlockDocuments. Only BlockDocuments matching all criteria
        will be returned
      properties:
        block_type_id:
          allOf:
          - $ref: '#/components/schemas/BlockDocumentFilterBlockTypeId'
          description: Filter criteria for `BlockDocument.block_type_id`
          title: Block Type Id
        is_anonymous:
          allOf:
          - $ref: '#/components/schemas/BlockDocumentFilterIsAnonymous'
          default:
            eq_: false
          description: Filter criteria for `BlockDocument.is_anonymous`. Defaults
            to excluding anonymous blocks.
          title: Is Anonymous
        operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          default: and_
          description: Operator for combining filter criteria. Defaults to 'and_'.
      title: BlockDocumentFilter
      type: object
    BlockDocumentFilterBlockTypeId:
      additionalProperties: false
      description: Filter by `BlockDocument.block_type_id`.
      properties:
        any_:
          description: A list of block type ids to include
          items:
            format: uuid
            type: string
          title: 'Any '
          type: array
      title: BlockDocumentFilterBlockTypeId
      type: object
    BlockDocumentFilterIsAnonymous:
      additionalProperties: false
      description: Filter by `BlockDocument.is_anonymous`.
      properties:
        eq_:
          description: Filter block documents for only those that are or are not anonymous.
          title: 'Eq '
          type: boolean
      title: BlockDocumentFilterIsAnonymous
      type: object
    BlockDocumentUpdate:
      additionalProperties: false
      description: Data used by the Orion API to update a block document.
      properties:
        data:
          title: Data
          type: object
      title: BlockDocumentUpdate
      type: object
    BlockSchema:
      description: An ORM representation of a block schema.
      properties:
        block_type:
          allOf:
          - $ref: '#/components/schemas/BlockType'
          description: The associated block type
          title: Block Type
        block_type_id:
          description: A block type ID
          format: uuid
          title: Block Type Id
          type: string
        capabilities:
          description: A list of Block capabilities
          items:
            type: string
          title: Capabilities
          type: array
        checksum:
          description: The block schema's unique checksum
          title: Checksum
          type: string
        created:
          format: date-time
          title: Created
          type: string
        fields:
          description: The block schema's field schema
          title: Fields
          type: object
        id:
          format: uuid
          title: Id
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
      required:
      - checksum
      - block_type_id
      title: BlockSchema
      type: object
    BlockSchemaCreate:
      additionalProperties: false
      description: Data used by the Orion API to create a block schema.
      properties:
        block_type_id:
          description: A block type ID
          format: uuid
          title: Block Type Id
          type: string
        capabilities:
          description: A list of Block capabilities
          items:
            type: string
          title: Capabilities
          type: array
        fields:
          description: The block schema's field schema
          title: Fields
          type: object
      required:
      - block_type_id
      title: BlockSchemaCreate
      type: object
    BlockSchemaFilter:
      additionalProperties: false
      description: Filter BlockSchemas
      properties:
        block_capabilities:
          allOf:
          - $ref: '#/components/schemas/BlockSchemaFilterCapabilities'
          description: Filter criteria for `BlockSchema.capabilities`
          title: Block Capabilities
        block_type_id:
          allOf:
          - $ref: '#/components/schemas/BlockSchemaFilterBlockTypeId'
          description: Filter criteria for `BlockSchema.block_type_id`
          title: Block Type Id
        id:
          allOf:
          - $ref: '#/components/schemas/BlockSchemaFilterId'
          description: Filter criteria for `BlockSchema.id`
          title: Id
        operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          default: and_
          description: Operator for combining filter criteria. Defaults to 'and_'.
      title: BlockSchemaFilter
      type: object
    BlockSchemaFilterBlockTypeId:
      additionalProperties: false
      description: Filter by `BlockSchema.block_type_id`.
      properties:
        any_:
          description: A list of block type ids to include
          items:
            format: uuid
            type: string
          title: 'Any '
          type: array
      title: BlockSchemaFilterBlockTypeId
      type: object
    BlockSchemaFilterCapabilities:
      additionalProperties: false
      description: Filter by `BlockSchema.capabilities`
      properties:
        all_:
          description: A list of block capabilities. Block entities will be returned
            only if an associated block schema has a superset of the defined capabilities.
          example:
          - write-storage
          - read-storage
          items:
            type: string
          title: 'All '
          type: array
      title: BlockSchemaFilterCapabilities
      type: object
    BlockSchemaFilterId:
      additionalProperties: false
      description: Filter by BlockSchema.id
      properties:
        any_:
          description: A list of IDs to include
          items:
            format: uuid
            type: string
          title: 'Any '
          type: array
      title: BlockSchemaFilterId
      type: object
    BlockType:
      description: An ORM representation of a block type
      properties:
        code_example:
          description: A code snippet demonstrating use of the corresponding block
          title: Code Example
          type: string
        created:
          format: date-time
          title: Created
          type: string
        description:
          description: A short blurb about the corresponding block's intended use
          title: Description
          type: string
        documentation_url:
          description: Web URL for the block type's documentation
          format: uri
          maxLength: 2083
          minLength: 1
          title: Documentation Url
          type: string
        id:
          format: uuid
          title: Id
          type: string
        is_protected:
          default: false
          description: Protected block types cannot be modified via API.
          title: Is Protected
          type: boolean
        logo_url:
          description: Web URL for the block type's logo
          format: uri
          maxLength: 2083
          minLength: 1
          title: Logo Url
          type: string
        name:
          description: A block type's name
          title: Name
          type: string
        slug:
          description: A block type's slug
          title: Slug
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
      required:
      - name
      - slug
      title: BlockType
      type: object
    BlockTypeCreate:
      additionalProperties: false
      description: Data used by the Orion API to create a block type.
      properties:
        code_example:
          description: A code snippet demonstrating use of the corresponding block
          title: Code Example
          type: string
        description:
          description: A short blurb about the corresponding block's intended use
          title: Description
          type: string
        documentation_url:
          description: Web URL for the block type's documentation
          format: uri
          maxLength: 2083
          minLength: 1
          title: Documentation Url
          type: string
        logo_url:
          description: Web URL for the block type's logo
          format: uri
          maxLength: 2083
          minLength: 1
          title: Logo Url
          type: string
        name:
          description: A block type's name
          title: Name
          type: string
        slug:
          description: A block type's slug
          title: Slug
          type: string
      required:
      - name
      - slug
      title: BlockTypeCreate
      type: object
    BlockTypeFilter:
      additionalProperties: false
      description: Filter BlockTypes
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/BlockTypeFilterName'
          description: Filter criteria for `BlockType.name`
          title: Name
      title: BlockTypeFilter
      type: object
    BlockTypeFilterName:
      additionalProperties: false
      description: Filter by `BlockType.name`
      properties:
        like_:
          description: A case-insensitive partial match. For example,  passing 'marvin'
            will match 'marvin', 'sad-Marvin', and 'marvin-robot'.
          example: marvin
          title: 'Like '
          type: string
      title: BlockTypeFilterName
      type: object
    BlockTypeUpdate:
      additionalProperties: false
      description: Data used by the Orion API to update a block type.
      properties:
        code_example:
          title: Code Example
          type: string
        description:
          title: Description
          type: string
        documentation_url:
          title: Documentation Url
          type: string
        logo_url:
          title: Logo Url
          type: string
      title: BlockTypeUpdate
      type: object
    Body_clear_database_admin_database_clear_post:
      properties:
        confirm:
          default: false
          description: Pass confirm=True to confirm you want to modify the database.
          title: Confirm
          type: boolean
      title: Body_clear_database_admin_database_clear_post
      type: object
    Body_count_deployments_deployments_count_post:
      properties:
        deployments:
          $ref: '#/components/schemas/DeploymentFilter'
        flow_runs:
          $ref: '#/components/schemas/FlowRunFilter'
        flows:
          $ref: '#/components/schemas/FlowFilter'
        task_runs:
          $ref: '#/components/schemas/TaskRunFilter'
      title: Body_count_deployments_deployments_count_post
      type: object
    Body_count_flow_runs_flow_runs_count_post:
      properties:
        deployments:
          $ref: '#/components/schemas/DeploymentFilter'
        flow_runs:
          $ref: '#/components/schemas/FlowRunFilter'
        flows:
          $ref: '#/components/schemas/FlowFilter'
        task_runs:
          $ref: '#/components/schemas/TaskRunFilter'
      title: Body_count_flow_runs_flow_runs_count_post
      type: object
    Body_count_flows_flows_count_post:
      properties:
        deployments:
          $ref: '#/components/schemas/DeploymentFilter'
        flow_runs:
          $ref: '#/components/schemas/FlowRunFilter'
        flows:
          $ref: '#/components/schemas/FlowFilter'
        task_runs:
          $ref: '#/components/schemas/TaskRunFilter'
      title: Body_count_flows_flows_count_post
      type: object
    Body_count_task_runs_task_runs_count_post:
      properties:
        deployments:
          $ref: '#/components/schemas/DeploymentFilter'
        flow_runs:
          $ref: '#/components/schemas/FlowRunFilter'
        flows:
          $ref: '#/components/schemas/FlowFilter'
        task_runs:
          $ref: '#/components/schemas/TaskRunFilter'
      title: Body_count_task_runs_task_runs_count_post
      type: object
    Body_create_database_admin_database_create_post:
      properties:
        confirm:
          default: false
          description: Pass confirm=True to confirm you want to modify the database.
          title: Confirm
          type: boolean
      title: Body_create_database_admin_database_create_post
      type: object
    Body_drop_database_admin_database_drop_post:
      properties:
        confirm:
          default: false
          description: Pass confirm=True to confirm you want to modify the database.
          title: Confirm
          type: boolean
      title: Body_drop_database_admin_database_drop_post
      type: object
    Body_flow_run_history_flow_runs_history_post:
      properties:
        deployments:
          $ref: '#/components/schemas/DeploymentFilter'
        flow_runs:
          $ref: '#/components/schemas/FlowRunFilter'
        flows:
          $ref: '#/components/schemas/FlowFilter'
        history_end:
          description: The history's end time.
          format: date-time
          title: History End
          type: string
        history_interval_seconds:
          description: The size of each history interval, in seconds. Must be at least
            1 second.
          format: time-delta
          title: History Interval Seconds
          type: number
        history_start:
          description: The history's start time.
          format: date-time
          title: History Start
          type: string
        task_runs:
          $ref: '#/components/schemas/TaskRunFilter'
      required:
      - history_start
      - history_end
      - history_interval_seconds
      title: Body_flow_run_history_flow_runs_history_post
      type: object
    Body_read_block_documents_block_documents_filter_post:
      properties:
        block_documents:
          $ref: '#/components/schemas/BlockDocumentFilter'
        block_schemas:
          $ref: '#/components/schemas/BlockSchemaFilter'
        include_secrets:
          default: false
          description: Whether to include sensitive values in the block document.
          title: Include Secrets
          type: boolean
        limit:
          description: Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided.
          title: Limit
          type: integer
        offset:
          default: 0
          minimum: 0.0
          title: Offset
          type: integer
      title: Body_read_block_documents_block_documents_filter_post
      type: object
    Body_read_block_schemas_block_schemas_filter_post:
      properties:
        block_schemas:
          $ref: '#/components/schemas/BlockSchemaFilter'
        limit:
          description: Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided.
          title: Limit
          type: integer
        offset:
          default: 0
          minimum: 0.0
          title: Offset
          type: integer
      title: Body_read_block_schemas_block_schemas_filter_post
      type: object
    Body_read_block_types_block_types_filter_post:
      properties:
        block_schemas:
          $ref: '#/components/schemas/BlockSchemaFilter'
        block_types:
          $ref: '#/components/schemas/BlockTypeFilter'
        limit:
          description: Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided.
          title: Limit
          type: integer
        offset:
          default: 0
          minimum: 0.0
          title: Offset
          type: integer
      title: Body_read_block_types_block_types_filter_post
      type: object
    Body_read_concurrency_limits_concurrency_limits_filter_post:
      properties:
        limit:
          description: Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided.
          title: Limit
          type: integer
        offset:
          default: 0
          minimum: 0.0
          title: Offset
          type: integer
      title: Body_read_concurrency_limits_concurrency_limits_filter_post
      type: object
    Body_read_deployments_deployments_filter_post:
      properties:
        deployments:
          $ref: '#/components/schemas/DeploymentFilter'
        flow_runs:
          $ref: '#/components/schemas/FlowRunFilter'
        flows:
          $ref: '#/components/schemas/FlowFilter'
        limit:
          description: Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided.
          title: Limit
          type: integer
        offset:
          default: 0
          minimum: 0.0
          title: Offset
          type: integer
        task_runs:
          $ref: '#/components/schemas/TaskRunFilter'
      title: Body_read_deployments_deployments_filter_post
      type: object
    Body_read_flow_run_history_ui_flow_runs_history_post:
      properties:
        deployments:
          $ref: '#/components/schemas/DeploymentFilter'
        flow_runs:
          $ref: '#/components/schemas/FlowRunFilter'
        flows:
          $ref: '#/components/schemas/FlowFilter'
        limit:
          default: 1000
          maximum: 1000.0
          title: Limit
          type: integer
        offset:
          default: 0
          minimum: 0.0
          title: Offset
          type: integer
        sort:
          allOf:
          - $ref: '#/components/schemas/FlowRunSort'
          default: EXPECTED_START_TIME_DESC
        task_runs:
          $ref: '#/components/schemas/TaskRunFilter'
      title: Body_read_flow_run_history_ui_flow_runs_history_post
      type: object
    Body_read_flow_run_notification_policies_flow_run_notification_policies_filter_post:
      properties:
        flow_run_notification_policy_filter:
          $ref: '#/components/schemas/FlowRunNotificationPolicyFilter'
        limit:
          description: Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided.
          title: Limit
          type: integer
        offset:
          default: 0
          minimum: 0.0
          title: Offset
          type: integer
      title: Body_read_flow_run_notification_policies_flow_run_notification_policies_filter_post
      type: object
    Body_read_flow_runs_flow_runs_filter_post:
      properties:
        deployments:
          $ref: '#/components/schemas/DeploymentFilter'
        flow_runs:
          $ref: '#/components/schemas/FlowRunFilter'
        flows:
          $ref: '#/components/schemas/FlowFilter'
        limit:
          description: Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided.
          title: Limit
          type: integer
        offset:
          default: 0
          minimum: 0.0
          title: Offset
          type: integer
        sort:
          allOf:
          - $ref: '#/components/schemas/FlowRunSort'
          default: ID_DESC
        task_runs:
          $ref: '#/components/schemas/TaskRunFilter'
      title: Body_read_flow_runs_flow_runs_filter_post
      type: object
    Body_read_flows_flows_filter_post:
      properties:
        deployments:
          $ref: '#/components/schemas/DeploymentFilter'
        flow_runs:
          $ref: '#/components/schemas/FlowRunFilter'
        flows:
          $ref: '#/components/schemas/FlowFilter'
        limit:
          description: Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided.
          title: Limit
          type: integer
        offset:
          default: 0
          minimum: 0.0
          title: Offset
          type: integer
        sort:
          allOf:
          - $ref: '#/components/schemas/FlowSort'
          default: NAME_ASC
        task_runs:
          $ref: '#/components/schemas/TaskRunFilter'
      title: Body_read_flows_flows_filter_post
      type: object
    Body_read_logs_logs_filter_post:
      properties:
        limit:
          description: Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided.
          title: Limit
          type: integer
        logs:
          $ref: '#/components/schemas/LogFilter'
        offset:
          default: 0
          minimum: 0.0
          title: Offset
          type: integer
        sort:
          allOf:
          - $ref: '#/components/schemas/LogSort'
          default: TIMESTAMP_ASC
      title: Body_read_logs_logs_filter_post
      type: object
    Body_read_saved_searches_saved_searches_filter_post:
      properties:
        limit:
          description: Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided.
          title: Limit
          type: integer
        offset:
          default: 0
          minimum: 0.0
          title: Offset
          type: integer
      title: Body_read_saved_searches_saved_searches_filter_post
      type: object
    Body_read_task_runs_task_runs_filter_post:
      properties:
        deployments:
          $ref: '#/components/schemas/DeploymentFilter'
        flow_runs:
          $ref: '#/components/schemas/FlowRunFilter'
        flows:
          $ref: '#/components/schemas/FlowFilter'
        limit:
          description: Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided.
          title: Limit
          type: integer
        offset:
          default: 0
          minimum: 0.0
          title: Offset
          type: integer
        sort:
          allOf:
          - $ref: '#/components/schemas/TaskRunSort'
          default: ID_DESC
        task_runs:
          $ref: '#/components/schemas/TaskRunFilter'
      title: Body_read_task_runs_task_runs_filter_post
      type: object
    Body_read_work_queue_runs_work_queues__id__get_runs_post:
      properties:
        agent_id:
          description: An optional unique identifier for the agent making this query.
            If provided, the Orion API will track the last time this agent polled
            the work queue.
          format: uuid
          title: Agent Id
          type: string
        limit:
          description: Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided.
          title: Limit
          type: integer
        scheduled_before:
          description: Only flow runs scheduled to start before this time will be
            returned. If not provided, defaults to now.
          format: date-time
          title: Scheduled Before
          type: string
      title: Body_read_work_queue_runs_work_queues__id__get_runs_post
      type: object
    Body_read_work_queues_work_queues_filter_post:
      properties:
        limit:
          description: Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided.
          title: Limit
          type: integer
        offset:
          default: 0
          minimum: 0.0
          title: Offset
          type: integer
      title: Body_read_work_queues_work_queues_filter_post
      type: object
    Body_schedule_deployment_deployments__id__schedule_post:
      properties:
        end_time:
          description: The latest date to schedule
          format: date-time
          title: End Time
          type: string
        max_runs:
          description: The maximum number of runs to schedule
          title: Max Runs
          type: integer
        start_time:
          description: The earliest date to schedule
          format: date-time
          title: Start Time
          type: string
      title: Body_schedule_deployment_deployments__id__schedule_post
      type: object
    Body_set_flow_run_state_flow_runs__id__set_state_post:
      properties:
        force:
          default: false
          description: If false, orchestration rules will be applied that may alter
            or prevent the state transition. If True, orchestration rules are not
            applied.
          title: Force
          type: boolean
        state:
          allOf:
          - $ref: '#/components/schemas/StateCreate'
          description: The intended state.
          title: State
      required:
      - state
      title: Body_set_flow_run_state_flow_runs__id__set_state_post
      type: object
    Body_set_task_run_state_task_runs__id__set_state_post:
      properties:
        force:
          default: false
          description: If false, orchestration rules will be applied that may alter
            or prevent the state transition. If True, orchestration rules are not
            applied.
          title: Force
          type: boolean
        state:
          allOf:
          - $ref: '#/components/schemas/StateCreate'
          description: The intended state.
          title: State
      required:
      - state
      title: Body_set_task_run_state_task_runs__id__set_state_post
      type: object
    Body_task_run_history_task_runs_history_post:
      properties:
        deployments:
          $ref: '#/components/schemas/DeploymentFilter'
        flow_runs:
          $ref: '#/components/schemas/FlowRunFilter'
        flows:
          $ref: '#/components/schemas/FlowFilter'
        history_end:
          description: The history's end time.
          format: date-time
          title: History End
          type: string
        history_interval_seconds:
          description: The size of each history interval, in seconds. Must be at least
            1 second.
          format: time-delta
          title: History Interval Seconds
          type: number
        history_start:
          description: The history's start time.
          format: date-time
          title: History Start
          type: string
        task_runs:
          $ref: '#/components/schemas/TaskRunFilter'
      required:
      - history_start
      - history_end
      - history_interval_seconds
      title: Body_task_run_history_task_runs_history_post
      type: object
    ConcurrencyLimit:
      description: An ORM representation of a concurrency limit.
      properties:
        active_slots:
          description: A list of active run ids using a concurrency slot
          items:
            format: uuid
            type: string
          title: Active Slots
          type: array
        concurrency_limit:
          description: The concurrency limit.
          title: Concurrency Limit
          type: integer
        created:
          format: date-time
          title: Created
          type: string
        id:
          format: uuid
          title: Id
          type: string
        tag:
          description: A tag the concurrency limit is applied to.
          title: Tag
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
      required:
      - tag
      - concurrency_limit
      title: ConcurrencyLimit
      type: object
    ConcurrencyLimitCreate:
      additionalProperties: false
      description: Data used by the Orion API to create a concurrency limit.
      properties:
        concurrency_limit:
          description: The concurrency limit.
          title: Concurrency Limit
          type: integer
        tag:
          description: A tag the concurrency limit is applied to.
          title: Tag
          type: string
      required:
      - tag
      - concurrency_limit
      title: ConcurrencyLimitCreate
      type: object
    Constant:
      description: Represents constant input value to a task run.
      properties:
        input_type:
          default: constant
          enum:
          - constant
          title: Input Type
          type: string
        type:
          title: Type
          type: string
      required:
      - type
      title: Constant
      type: object
    CronSchedule:
      additionalProperties: false
      description: |-
        Cron schedule

        NOTE: If the timezone is a DST-observing one, then the schedule will adjust
        itself appropriately. Cron's rules for DST are based on schedule times, not
        intervals. This means that an hourly cron schedule will fire on every new
        schedule hour, not every elapsed hour; for example, when clocks are set back
        this will result in a two-hour pause as the schedule will fire *the first
        time* 1am is reached and *the first time* 2am is reached, 120 minutes later.
        Longer schedules, such as one that fires at 9am every morning, will
        automatically adjust for DST.

        Args:
            cron (str): a valid cron string
            timezone (str): a valid timezone string
            day_or (bool, optional): Control how croniter handles `day` and `day_of_week`
                entries. Defaults to True, matching cron which connects those values using
                OR. If the switch is set to False, the values are connected using AND. This
                behaves like fcron and enables you to e.g. define a job that executes each
                2nd friday of a month by setting the days of month and the weekday.
      properties:
        cron:
          example: 0 0 * * *
          title: Cron
          type: string
        day_or:
          default: true
          description: Control croniter behavior for handling day and day_of_week
            entries.
          title: Day Or
          type: boolean
        timezone:
          example: America/New_York
          title: Timezone
          type: string
      required:
      - cron
      title: CronSchedule
      type: object
    DataDocument:
      description: |-
        A data document includes an encoding string and a blob of encoded data

        Subclasses can define the expected type for the blob's underlying type using the
        generic variable `D`.

        For example `DataDocument[str]` indicates that a string should be passed when
        creating the document and a string will be returned when it is decoded.
      properties:
        blob:
          format: binary
          title: Blob
          type: string
        encoding:
          title: Encoding
          type: string
      required:
      - encoding
      - blob
      title: DataDocument
      type: object
    DependencyResult:
      description: |-
        A base pydantic.BaseModel for all Prefect schemas and pydantic models.

        As the basis for most Prefect schemas, this base model usually ignores extra
        fields that are passed to it at instantiation. Because adding new fields to
        API payloads is not considered a breaking change, this ensures that any
        Prefect client loading data from a server running a possibly-newer version
        of Prefect will be able to process those new fields gracefully. However,
        when PREFECT_TEST_MODE is on, extra fields are forbidden in order to catch
        subtle unintentional testing errors.
      properties:
        end_time:
          format: date-time
          title: End Time
          type: string
        estimated_run_time:
          format: time-delta
          title: Estimated Run Time
          type: number
        expected_start_time:
          format: date-time
          title: Expected Start Time
          type: string
        id:
          format: uuid
          title: Id
          type: string
        start_time:
          format: date-time
          title: Start Time
          type: string
        state:
          $ref: '#/components/schemas/State'
        total_run_time:
          format: time-delta
          title: Total Run Time
          type: number
        upstream_dependencies:
          items:
            $ref: '#/components/schemas/TaskRunResult'
          title: Upstream Dependencies
          type: array
      required:
      - id
      - upstream_dependencies
      - state
      title: DependencyResult
      type: object
    Deployment:
      description: An ORM representation of deployment data.
      properties:
        created:
          format: date-time
          title: Created
          type: string
        description:
          description: A description for the deployment.
          title: Description
          type: string
        flow_id:
          description: The flow id associated with the deployment.
          format: uuid
          title: Flow Id
          type: string
        id:
          format: uuid
          title: Id
          type: string
        infrastructure_document_id:
          description: The block document defining infrastructure to use for flow
            runs.
          format: uuid
          title: Infrastructure Document Id
          type: string
        is_schedule_active:
          default: true
          description: Whether or not the deployment schedule is active.
          title: Is Schedule Active
          type: boolean
        manifest_path:
          description: The path to the flow's manifest file, relative to the chosen
            storage.
          title: Manifest Path
          type: string
        name:
          description: The name of the deployment.
          title: Name
          type: string
        parameter_openapi_schema:
          description: The parameter schema of the flow, including defaults.
          title: Parameter Openapi Schema
          type: object
        parameters:
          description: Parameters for flow runs scheduled by the deployment.
          title: Parameters
          type: object
        schedule:
          anyOf:
          - $ref: '#/components/schemas/IntervalSchedule'
          - $ref: '#/components/schemas/CronSchedule'
          - $ref: '#/components/schemas/RRuleSchedule'
          description: A schedule for the deployment.
          title: Schedule
        storage_document_id:
          description: The block document defining storage used for this flow.
          format: uuid
          title: Storage Document Id
          type: string
        tags:
          description: A list of tags for the deployment
          example:
          - tag-1
          - tag-2
          items:
            type: string
          title: Tags
          type: array
        updated:
          format: date-time
          title: Updated
          type: string
        version:
          description: An optional version for the deployment.
          title: Version
          type: string
      required:
      - name
      - flow_id
      - manifest_path
      title: Deployment
      type: object
    DeploymentCreate:
      additionalProperties: false
      description: Data used by the Orion API to create a deployment.
      properties:
        description:
          description: A description for the deployment.
          title: Description
          type: string
        flow_id:
          description: The flow id associated with the deployment.
          format: uuid
          title: Flow Id
          type: string
        infrastructure_document_id:
          description: The block document defining infrastructure to use for flow
            runs.
          format: uuid
          title: Infrastructure Document Id
          type: string
        is_schedule_active:
          default: true
          description: Whether or not the deployment schedule is active.
          title: Is Schedule Active
          type: boolean
        manifest_path:
          description: The path to the flow's manifest file, relative to the chosen
            storage.
          title: Manifest Path
          type: string
        name:
          description: The name of the deployment.
          title: Name
          type: string
        parameter_openapi_schema:
          description: The parameter schema of the flow, including defaults.
          title: Parameter Openapi Schema
          type: object
        parameters:
          description: Parameters for flow runs scheduled by the deployment.
          title: Parameters
          type: object
        schedule:
          anyOf:
          - $ref: '#/components/schemas/IntervalSchedule'
          - $ref: '#/components/schemas/CronSchedule'
          - $ref: '#/components/schemas/RRuleSchedule'
          description: A schedule for the deployment.
          title: Schedule
        storage_document_id:
          description: The block document defining storage used for this flow.
          format: uuid
          title: Storage Document Id
          type: string
        tags:
          description: A list of tags for the deployment
          example:
          - tag-1
          - tag-2
          items:
            type: string
          title: Tags
          type: array
        version:
          description: An optional version for the deployment.
          title: Version
          type: string
      required:
      - name
      - flow_id
      - manifest_path
      title: DeploymentCreate
      type: object
    DeploymentFilter:
      additionalProperties: false
      description: Filter for deployments. Only deployments matching all criteria
        will be returned.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/DeploymentFilterId'
          description: Filter criteria for `Deployment.id`
          title: Id
        is_schedule_active:
          allOf:
          - $ref: '#/components/schemas/DeploymentFilterIsScheduleActive'
          description: Filter criteria for `Deployment.is_schedule_active`
          title: Is Schedule Active
        name:
          allOf:
          - $ref: '#/components/schemas/DeploymentFilterName'
          description: Filter criteria for `Deployment.name`
          title: Name
        operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          default: and_
          description: Operator for combining filter criteria. Defaults to 'and_'.
        tags:
          allOf:
          - $ref: '#/components/schemas/DeploymentFilterTags'
          description: Filter criteria for `Deployment.tags`
          title: Tags
      title: DeploymentFilter
      type: object
    DeploymentFilterId:
      additionalProperties: false
      description: Filter by `Deployment.id`.
      properties:
        any_:
          description: A list of deployment ids to include
          items:
            format: uuid
            type: string
          title: 'Any '
          type: array
      title: DeploymentFilterId
      type: object
    DeploymentFilterIsScheduleActive:
      additionalProperties: false
      description: Filter by `Deployment.is_schedule_active`.
      properties:
        eq_:
          description: Only returns where deployment schedule is/is not active
          title: 'Eq '
          type: boolean
      title: DeploymentFilterIsScheduleActive
      type: object
    DeploymentFilterName:
      additionalProperties: false
      description: Filter by `Deployment.name`.
      properties:
        any_:
          description: A list of deployment names to include
          example:
          - my-deployment-1
          - my-deployment-2
          items:
            type: string
          title: 'Any '
          type: array
        like_:
          description: A case-insensitive partial match. For example,  passing 'marvin'
            will match 'marvin', 'sad-Marvin', and 'marvin-robot'.
          example: marvin
          title: 'Like '
          type: string
      title: DeploymentFilterName
      type: object
    DeploymentFilterTags:
      additionalProperties: false
      description: Filter by `Deployment.tags`.
      properties:
        all_:
          description: A list of tags. Deployments will be returned only if their
            tags are a superset of the list
          example:
          - tag-1
          - tag-2
          items:
            type: string
          title: 'All '
          type: array
        is_null_:
          description: If true, only include deployments without tags
          title: 'Is Null '
          type: boolean
        operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          default: and_
          description: Operator for combining filter criteria. Defaults to 'and_'.
      title: DeploymentFilterTags
      type: object
    DeploymentFlowRunCreate:
      additionalProperties: false
      description: Data used by the Orion API to create a flow run from a deployment.
      properties:
        context:
          description: Additional context for the flow run.
          example:
            my_var: my_val
          title: Context
          type: object
        empirical_policy:
          $ref: '#/components/schemas/FlowRunPolicy'
        idempotency_key:
          description: An optional idempotency key for the flow run. Used to ensure
            the same flow run is not created multiple times.
          title: Idempotency Key
          type: string
        infrastructure_document_id:
          description: The block document defining infrastructure to use this flow
            run.
          format: uuid
          title: Infrastructure Document Id
          type: string
        name:
          description: The name of the flow run. Defaults to a random slug if not
            specified.
          example: my-flow-run
          title: Name
          type: string
        parameters:
          description: Parameters for the flow run.
          title: Parameters
          type: object
        state:
          allOf:
          - $ref: '#/components/schemas/StateCreate'
          description: The state of the flow run to create
          title: State
        tags:
          description: A list of tags on the flow run
          example:
          - tag-1
          - tag-2
          items:
            type: string
          title: Tags
          type: array
      title: DeploymentFlowRunCreate
      type: object
    DeploymentUpdate:
      additionalProperties: false
      description: Data used by the Orion API to update a deployment.
      properties:
        description:
          description: A description for the deployment.
          title: Description
          type: string
        infrastructure_document_id:
          description: The block document defining infrastructure to use for flow
            runs.
          format: uuid
          title: Infrastructure Document Id
          type: string
        is_schedule_active:
          default: true
          description: Whether or not the deployment schedule is active.
          title: Is Schedule Active
          type: boolean
        parameters:
          description: Parameters for flow runs scheduled by the deployment.
          title: Parameters
          type: object
        schedule:
          anyOf:
          - $ref: '#/components/schemas/IntervalSchedule'
          - $ref: '#/components/schemas/CronSchedule'
          - $ref: '#/components/schemas/RRuleSchedule'
          description: A schedule for the deployment.
          title: Schedule
        storage_document_id:
          description: The block document defining storage used for this flow.
          format: uuid
          title: Storage Document Id
          type: string
        tags:
          description: A list of tags for the deployment
          example:
          - tag-1
          - tag-2
          items:
            type: string
          title: Tags
          type: array
        version:
          description: An optional version for the deployment.
          title: Version
          type: string
      title: DeploymentUpdate
      type: object
    Flow:
      description: An ORM representation of flow data.
      properties:
        created:
          format: date-time
          title: Created
          type: string
        id:
          format: uuid
          title: Id
          type: string
        name:
          description: The name of the flow
          example: my-flow
          title: Name
          type: string
        tags:
          description: A list of flow tags
          example:
          - tag-1
          - tag-2
          items:
            type: string
          title: Tags
          type: array
        updated:
          format: date-time
          title: Updated
          type: string
      required:
      - name
      title: Flow
      type: object
    FlowCreate:
      additionalProperties: false
      description: Data used by the Orion API to create a flow.
      properties:
        name:
          description: The name of the flow
          example: my-flow
          title: Name
          type: string
        tags:
          description: A list of flow tags
          example:
          - tag-1
          - tag-2
          items:
            type: string
          title: Tags
          type: array
      required:
      - name
      title: FlowCreate
      type: object
    FlowFilter:
      additionalProperties: false
      description: Filter for flows. Only flows matching all criteria will be returned.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/FlowFilterId'
          description: Filter criteria for `Flow.id`
          title: Id
        name:
          allOf:
          - $ref: '#/components/schemas/FlowFilterName'
          description: Filter criteria for `Flow.name`
          title: Name
        operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          default: and_
          description: Operator for combining filter criteria. Defaults to 'and_'.
        tags:
          allOf:
          - $ref: '#/components/schemas/FlowFilterTags'
          description: Filter criteria for `Flow.tags`
          title: Tags
      title: FlowFilter
      type: object
    FlowFilterId:
      additionalProperties: false
      description: Filter by `Flow.id`.
      properties:
        any_:
          description: A list of flow ids to include
          items:
            format: uuid
            type: string
          title: 'Any '
          type: array
      title: FlowFilterId
      type: object
    FlowFilterName:
      additionalProperties: false
      description: Filter by `Flow.name`.
      properties:
        any_:
          description: A list of flow names to include
          example:
          - my-flow-1
          - my-flow-2
          items:
            type: string
          title: 'Any '
          type: array
        like_:
          description: A case-insensitive partial match. For example,  passing 'marvin'
            will match 'marvin', 'sad-Marvin', and 'marvin-robot'.
          example: marvin
          title: 'Like '
          type: string
      title: FlowFilterName
      type: object
    FlowFilterTags:
      additionalProperties: false
      description: Filter by `Flow.tags`.
      properties:
        all_:
          description: A list of tags. Flows will be returned only if their tags are
            a superset of the list
          example:
          - tag-1
          - tag-2
          items:
            type: string
          title: 'All '
          type: array
        is_null_:
          description: If true, only include flows without tags
          title: 'Is Null '
          type: boolean
        operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          default: and_
          description: Operator for combining filter criteria. Defaults to 'and_'.
      title: FlowFilterTags
      type: object
    FlowRun:
      description: An ORM representation of flow run data.
      properties:
        auto_scheduled:
          default: false
          description: Whether or not the flow run was automatically scheduled.
          title: Auto Scheduled
          type: boolean
        context:
          description: Additional context for the flow run.
          example:
            my_var: my_val
          title: Context
          type: object
        created:
          format: date-time
          title: Created
          type: string
        deployment_id:
          description: The id of the deployment associated with this flow run, if
            available.
          format: uuid
          title: Deployment Id
          type: string
        empirical_policy:
          $ref: '#/components/schemas/FlowRunPolicy'
        end_time:
          description: The actual end time.
          format: date-time
          title: End Time
          type: string
        estimated_run_time:
          default: 0.0
          description: A real-time estimate of the total run time.
          format: time-delta
          title: Estimated Run Time
          type: number
        estimated_start_time_delta:
          default: 0.0
          description: The difference between actual and expected start time.
          format: time-delta
          title: Estimated Start Time Delta
          type: number
        expected_start_time:
          description: The flow run's expected start time.
          format: date-time
          title: Expected Start Time
          type: string
        flow_id:
          description: The id of the flow being run.
          format: uuid
          title: Flow Id
          type: string
        flow_version:
          description: The version of the flow executed in this flow run.
          example: '1.0'
          title: Flow Version
          type: string
        id:
          format: uuid
          title: Id
          type: string
        idempotency_key:
          description: An optional idempotency key for the flow run. Used to ensure
            the same flow run is not created multiple times.
          title: Idempotency Key
          type: string
        infrastructure_document_id:
          description: The block document defining infrastructure to use this flow
            run.
          format: uuid
          title: Infrastructure Document Id
          type: string
        name:
          description: The name of the flow run. Defaults to a random slug if not
            specified.
          example: my-flow-run
          title: Name
          type: string
        next_scheduled_start_time:
          description: The next time the flow run is scheduled to start.
          format: date-time
          title: Next Scheduled Start Time
          type: string
        parameters:
          description: Parameters for the flow run.
          title: Parameters
          type: object
        parent_task_run_id:
          description: If the flow run is a subflow, the id of the 'dummy' task in
            the parent flow used to track subflow state.
          format: uuid
          title: Parent Task Run Id
          type: string
        run_count:
          default: 0
          description: The number of times the flow run was executed.
          title: Run Count
          type: integer
        start_time:
          description: The actual start time.
          format: date-time
          title: Start Time
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/State'
          description: The current state of the flow run.
          title: State
        state_id:
          description: The id of the flow run's current state.
          format: uuid
          title: State Id
          type: string
        state_name:
          description: The name of the current flow run state.
          title: State Name
          type: string
        state_type:
          allOf:
          - $ref: '#/components/schemas/StateType'
          description: The type of the current flow run state.
        tags:
          description: A list of tags on the flow run
          example:
          - tag-1
          - tag-2
          items:
            type: string
          title: Tags
          type: array
        total_run_time:
          default: 0.0
          description: Total run time. If the flow run was executed multiple times,
            the time of each run will be summed.
          format: time-delta
          title: Total Run Time
          type: number
        updated:
          format: date-time
          title: Updated
          type: string
      required:
      - flow_id
      title: FlowRun
      type: object
    FlowRunCreate:
      additionalProperties: false
      description: Data used by the Orion API to create a flow run.
      properties:
        context:
          description: Additional context for the flow run.
          example:
            my_var: my_val
          title: Context
          type: object
        deployment_id:
          description: The id of the deployment associated with this flow run, if
            available.
          format: uuid
          title: Deployment Id
          type: string
        empirical_policy:
          $ref: '#/components/schemas/FlowRunPolicy'
        flow_id:
          description: The id of the flow being run.
          format: uuid
          title: Flow Id
          type: string
        flow_version:
          description: The version of the flow executed in this flow run.
          example: '1.0'
          title: Flow Version
          type: string
        idempotency_key:
          description: An optional idempotency key for the flow run. Used to ensure
            the same flow run is not created multiple times.
          title: Idempotency Key
          type: string
        infrastructure_document_id:
          description: The block document defining infrastructure to use this flow
            run.
          format: uuid
          title: Infrastructure Document Id
          type: string
        name:
          description: The name of the flow run. Defaults to a random slug if not
            specified.
          example: my-flow-run
          title: Name
          type: string
        parameters:
          description: Parameters for the flow run.
          title: Parameters
          type: object
        parent_task_run_id:
          description: If the flow run is a subflow, the id of the 'dummy' task in
            the parent flow used to track subflow state.
          format: uuid
          title: Parent Task Run Id
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/StateCreate'
          description: The state of the flow run to create
          title: State
        tags:
          description: A list of tags on the flow run
          example:
          - tag-1
          - tag-2
          items:
            type: string
          title: Tags
          type: array
      required:
      - flow_id
      title: FlowRunCreate
      type: object
    FlowRunFilter:
      additionalProperties: false
      description: Filter flow runs. Only flow runs matching all criteria will be
        returned
      properties:
        deployment_id:
          allOf:
          - $ref: '#/components/schemas/FlowRunFilterDeploymentId'
          description: Filter criteria for `FlowRun.deployment_id`
          title: Deployment Id
        expected_start_time:
          allOf:
          - $ref: '#/components/schemas/FlowRunFilterExpectedStartTime'
          description: Filter criteria for `FlowRun.expected_start_time`
          title: Expected Start Time
        flow_version:
          allOf:
          - $ref: '#/components/schemas/FlowRunFilterFlowVersion'
          description: Filter criteria for `FlowRun.flow_version`
          title: Flow Version
        id:
          allOf:
          - $ref: '#/components/schemas/FlowRunFilterId'
          description: Filter criteria for `FlowRun.id`
          title: Id
        name:
          allOf:
          - $ref: '#/components/schemas/FlowRunFilterName'
          description: Filter criteria for `FlowRun.name`
          title: Name
        next_scheduled_start_time:
          allOf:
          - $ref: '#/components/schemas/FlowRunFilterNextScheduledStartTime'
          description: Filter criteria for `FlowRun.next_scheduled_start_time`
          title: Next Scheduled Start Time
        operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          default: and_
          description: Operator for combining filter criteria. Defaults to 'and_'.
        parent_task_run_id:
          allOf:
          - $ref: '#/components/schemas/FlowRunFilterParentTaskRunId'
          description: Filter criteria for `FlowRun.parent_task_run_id`
          title: Parent Task Run Id
        start_time:
          allOf:
          - $ref: '#/components/schemas/FlowRunFilterStartTime'
          description: Filter criteria for `FlowRun.start_time`
          title: Start Time
        state:
          allOf:
          - $ref: '#/components/schemas/FlowRunFilterState'
          description: Filter criteria for `FlowRun.state`
          title: State
        tags:
          allOf:
          - $ref: '#/components/schemas/FlowRunFilterTags'
          description: Filter criteria for `FlowRun.tags`
          title: Tags
      title: FlowRunFilter
      type: object
    FlowRunFilterDeploymentId:
      additionalProperties: false
      description: Filter by `FlowRun.deployment_id`.
      properties:
        any_:
          description: A list of flow run deployment ids to include
          items:
            format: uuid
            type: string
          title: 'Any '
          type: array
        is_null_:
          description: If true, only include flow runs without deployment ids
          title: 'Is Null '
          type: boolean
        operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          default: and_
          description: Operator for combining filter criteria. Defaults to 'and_'.
      title: FlowRunFilterDeploymentId
      type: object
    FlowRunFilterExpectedStartTime:
      additionalProperties: false
      description: Filter by `FlowRun.expected_start_time`.
      properties:
        after_:
          description: Only include flow runs scheduled to start at or after this
            time
          format: date-time
          title: 'After '
          type: string
        before_:
          description: Only include flow runs scheduled to start at or before this
            time
          format: date-time
          title: 'Before '
          type: string
      title: FlowRunFilterExpectedStartTime
      type: object
    FlowRunFilterFlowVersion:
      additionalProperties: false
      description: Filter by `FlowRun.flow_version`.
      properties:
        any_:
          description: A list of flow run flow_versions to include
          items:
            type: string
          title: 'Any '
          type: array
      title: FlowRunFilterFlowVersion
      type: object
    FlowRunFilterId:
      additionalProperties: false
      description: Filter by FlowRun.id.
      properties:
        any_:
          description: A list of flow run ids to include
          items:
            format: uuid
            type: string
          title: 'Any '
          type: array
        not_any_:
          description: A list of flow run ids to exclude
          items:
            format: uuid
            type: string
          title: 'Not Any '
          type: array
      title: FlowRunFilterId
      type: object
    FlowRunFilterName:
      additionalProperties: false
      description: Filter by `FlowRun.name`.
      properties:
        any_:
          description: A list of flow run names to include
          example:
          - my-flow-run-1
          - my-flow-run-2
          items:
            type: string
          title: 'Any '
          type: array
        like_:
          description: A case-insensitive partial match. For example,  passing 'marvin'
            will match 'marvin', 'sad-Marvin', and 'marvin-robot'.
          example: marvin
          title: 'Like '
          type: string
      title: FlowRunFilterName
      type: object
    FlowRunFilterNextScheduledStartTime:
      additionalProperties: false
      description: Filter by `FlowRun.next_scheduled_start_time`.
      properties:
        after_:
          description: Only include flow runs with a next_scheduled_start_time at
            or after this time
          format: date-time
          title: 'After '
          type: string
        before_:
          description: Only include flow runs with a next_scheduled_start_time or
            before this time
          format: date-time
          title: 'Before '
          type: string
      title: FlowRunFilterNextScheduledStartTime
      type: object
    FlowRunFilterParentTaskRunId:
      additionalProperties: false
      description: Filter by `FlowRun.parent_task_run_id`.
      properties:
        any_:
          description: A list of flow run parent_task_run_ids to include
          items:
            format: uuid
            type: string
          title: 'Any '
          type: array
        is_null_:
          description: If true, only include flow runs without parent_task_run_id
          title: 'Is Null '
          type: boolean
        operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          default: and_
          description: Operator for combining filter criteria. Defaults to 'and_'.
      title: FlowRunFilterParentTaskRunId
      type: object
    FlowRunFilterStartTime:
      additionalProperties: false
      description: Filter by `FlowRun.start_time`.
      properties:
        after_:
          description: Only include flow runs starting at or after this time
          format: date-time
          title: 'After '
          type: string
        before_:
          description: Only include flow runs starting at or before this time
          format: date-time
          title: 'Before '
          type: string
        is_null_:
          description: If true, only return flow runs without a start time
          title: 'Is Null '
          type: boolean
      title: FlowRunFilterStartTime
      type: object
    FlowRunFilterState:
      additionalProperties: false
      description: Base model for Prefect filters
      properties:
        name:
          $ref: '#/components/schemas/FlowRunFilterStateName'
        type:
          $ref: '#/components/schemas/FlowRunFilterStateType'
      title: FlowRunFilterState
      type: object
    FlowRunFilterStateName:
      additionalProperties: false
      description: Base model for Prefect filters
      properties:
        any_:
          description: A list of flow run state names to include
          items:
            type: string
          title: 'Any '
          type: array
      title: FlowRunFilterStateName
      type: object
    FlowRunFilterStateType:
      additionalProperties: false
      description: Filter by `FlowRun.state_type`.
      properties:
        any_:
          description: A list of flow run state types to include
          items:
            $ref: '#/components/schemas/StateType'
          type: array
      title: FlowRunFilterStateType
      type: object
    FlowRunFilterTags:
      additionalProperties: false
      description: Filter by `FlowRun.tags`.
      properties:
        all_:
          description: A list of tags. Flow runs will be returned only if their tags
            are a superset of the list
          example:
          - tag-1
          - tag-2
          items:
            type: string
          title: 'All '
          type: array
        is_null_:
          description: If true, only include flow runs without tags
          title: 'Is Null '
          type: boolean
        operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          default: and_
          description: Operator for combining filter criteria. Defaults to 'and_'.
      title: FlowRunFilterTags
      type: object
    FlowRunNotificationPolicy:
      description: An ORM representation of a flow run notification.
      properties:
        block_document_id:
          description: The block document ID used for sending notifications
          format: uuid
          title: Block Document Id
          type: string
        created:
          format: date-time
          title: Created
          type: string
        id:
          format: uuid
          title: Id
          type: string
        is_active:
          default: true
          description: Whether the policy is currently active
          title: Is Active
          type: boolean
        message_template:
          description: 'A templatable notification message. Use {braces} to add variables.
            Valid variables include: ''flow_id'', ''flow_name'', ''flow_run_id'',
            ''flow_run_name'', ''flow_run_notification_policy_id'', ''flow_run_parameters'',
            ''flow_run_state_message'', ''flow_run_state_name'', ''flow_run_state_timestamp'',
            ''flow_run_state_type'''
          example: Flow run {flow_run_name} with id {flow_run_id} entered state {flow_run_state_name}.
          title: Message Template
          type: string
        state_names:
          description: The flow run states that trigger notifications
          items:
            type: string
          title: State Names
          type: array
        tags:
          description: The flow run tags that trigger notifications (set [] to disable)
          items:
            type: string
          title: Tags
          type: array
        updated:
          format: date-time
          title: Updated
          type: string
      required:
      - state_names
      - tags
      - block_document_id
      title: FlowRunNotificationPolicy
      type: object
    FlowRunNotificationPolicyCreate:
      additionalProperties: false
      description: Data used by the Orion API to create a flow run notification policy.
      properties:
        block_document_id:
          description: The block document ID used for sending notifications
          format: uuid
          title: Block Document Id
          type: string
        is_active:
          default: true
          description: Whether the policy is currently active
          title: Is Active
          type: boolean
        message_template:
          description: 'A templatable notification message. Use {braces} to add variables.
            Valid variables include: ''flow_id'', ''flow_name'', ''flow_run_id'',
            ''flow_run_name'', ''flow_run_notification_policy_id'', ''flow_run_parameters'',
            ''flow_run_state_message'', ''flow_run_state_name'', ''flow_run_state_timestamp'',
            ''flow_run_state_type'''
          example: Flow run {flow_run_name} with id {flow_run_id} entered state {flow_run_state_name}.
          title: Message Template
          type: string
        state_names:
          description: The flow run states that trigger notifications
          items:
            type: string
          title: State Names
          type: array
        tags:
          description: The flow run tags that trigger notifications (set [] to disable)
          items:
            type: string
          title: Tags
          type: array
      required:
      - state_names
      - tags
      - block_document_id
      title: FlowRunNotificationPolicyCreate
      type: object
    FlowRunNotificationPolicyFilter:
      additionalProperties: false
      description: Filter FlowRunNotificationPolicies.
      properties:
        is_active:
          allOf:
          - $ref: '#/components/schemas/FlowRunNotificationPolicyFilterIsActive'
          default:
            eq_: false
          description: 'Filter criteria for `FlowRunNotificationPolicy.is_active`. '
          title: Is Active
      title: FlowRunNotificationPolicyFilter
      type: object
    FlowRunNotificationPolicyFilterIsActive:
      additionalProperties: false
      description: Filter by `FlowRunNotificationPolicy.is_active`.
      properties:
        eq_:
          description: Filter notification policies for only those that are or are
            not active.
          title: 'Eq '
          type: boolean
      title: FlowRunNotificationPolicyFilterIsActive
      type: object
    FlowRunNotificationPolicyUpdate:
      additionalProperties: false
      description: Data used by the Orion API to update a flow run notification policy.
      properties:
        block_document_id:
          format: uuid
          title: Block Document Id
          type: string
        is_active:
          title: Is Active
          type: boolean
        message_template:
          title: Message Template
          type: string
        state_names:
          items:
            type: string
          title: State Names
          type: array
        tags:
          items:
            type: string
          title: Tags
          type: array
      title: FlowRunNotificationPolicyUpdate
      type: object
    FlowRunPolicy:
      description: Defines of how a flow run should retry.
      properties:
        max_retries:
          default: 0
          title: Max Retries
          type: integer
        retry_delay_seconds:
          default: 0
          title: Retry Delay Seconds
          type: number
      title: FlowRunPolicy
      type: object
    FlowRunSort:
      description: Defines flow run sorting options.
      enum:
      - ID_DESC
      - EXPECTED_START_TIME_ASC
      - EXPECTED_START_TIME_DESC
      - NAME_ASC
      - NAME_DESC
      - NEXT_SCHEDULED_START_TIME_ASC
      - END_TIME_DESC
      title: FlowRunSort
      type: string
    FlowRunUpdate:
      additionalProperties: false
      description: Data used by the Orion API to update a flow run.
      properties:
        flow_version:
          description: The version of the flow executed in this flow run.
          example: '1.0'
          title: Flow Version
          type: string
        name:
          description: The name of the flow run. Defaults to a random slug if not
            specified.
          example: my-flow-run
          title: Name
          type: string
        parameters:
          description: Parameters for the flow run.
          title: Parameters
          type: object
        tags:
          description: A list of tags on the flow run
          example:
          - tag-1
          - tag-2
          items:
            type: string
          title: Tags
          type: array
      title: FlowRunUpdate
      type: object
    FlowSort:
      description: Defines flow sorting options.
      enum:
      - CREATED_DESC
      - UPDATED_DESC
      - NAME_ASC
      - NAME_DESC
      title: FlowSort
      type: string
    FlowUpdate:
      additionalProperties: false
      description: Data used by the Orion API to update a flow.
      properties:
        tags:
          description: A list of flow tags
          example:
          - tag-1
          - tag-2
          items:
            type: string
          title: Tags
          type: array
      title: FlowUpdate
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    HistoryResponse:
      description: Represents a history of aggregation states over an interval
      properties:
        interval_end:
          description: The end date of the interval.
          format: date-time
          title: Interval End
          type: string
        interval_start:
          description: The start date of the interval.
          format: date-time
          title: Interval Start
          type: string
        states:
          description: A list of state histories during the interval.
          items:
            $ref: '#/components/schemas/HistoryResponseState'
          title: States
          type: array
      required:
      - interval_start
      - interval_end
      - states
      title: HistoryResponse
      type: object
    HistoryResponseState:
      description: Represents a single state's history over an interval.
      properties:
        count_runs:
          description: The number of runs in the specified state during the interval.
          title: Count Runs
          type: integer
        state_name:
          description: The state name.
          title: State Name
          type: string
        state_type:
          allOf:
          - $ref: '#/components/schemas/StateType'
          description: The state type.
        sum_estimated_lateness:
          description: The sum of differences between actual and expected start time
            during the interval.
          format: time-delta
          title: Sum Estimated Lateness
          type: number
        sum_estimated_run_time:
          description: The total estimated run time of all runs during the interval.
          format: time-delta
          title: Sum Estimated Run Time
          type: number
      required:
      - state_type
      - state_name
      - count_runs
      - sum_estimated_run_time
      - sum_estimated_lateness
      title: HistoryResponseState
      type: object
    IntervalSchedule:
      additionalProperties: false
      description: |-
        A schedule formed by adding `interval` increments to an `anchor_date`. If no
        `anchor_date` is supplied, the current UTC time is used.  If a
        timezone-naive datetime is provided for `anchor_date`, it is assumed to be
        in the schedule's timezone (or UTC). Even if supplied with an IANA timezone,
        anchor dates are always stored as UTC offsets, so a `timezone` can be
        provided to determine localization behaviors like DST boundary handling. If
        none is provided it will be inferred from the anchor date.

        NOTE: If the `IntervalSchedule` `anchor_date` or `timezone` is provided in a
        DST-observing timezone, then the schedule will adjust itself appropriately.
        Intervals greater than 24 hours will follow DST conventions, while intervals
        of less than 24 hours will follow UTC intervals. For example, an hourly
        schedule will fire every UTC hour, even across DST boundaries. When clocks
        are set back, this will result in two runs that *appear* to both be
        scheduled for 1am local time, even though they are an hour apart in UTC
        time. For longer intervals, like a daily schedule, the interval schedule
        will adjust for DST boundaries so that the clock-hour remains constant. This
        means that a daily schedule that always fires at 9am will observe DST and
        continue to fire at 9am in the local time zone.
      properties:
        anchor_date:
          format: date-time
          title: Anchor Date
          type: string
        interval:
          format: time-delta
          title: Interval
          type: number
        timezone:
          example: America/New_York
          title: Timezone
          type: string
      required:
      - interval
      title: IntervalSchedule
      type: object
    Log:
      description: An ORM representation of log data.
      properties:
        created:
          format: date-time
          title: Created
          type: string
        flow_run_id:
          description: The flow run ID associated with the log.
          format: uuid
          title: Flow Run Id
          type: string
        id:
          format: uuid
          title: Id
          type: string
        level:
          description: The log level.
          title: Level
          type: integer
        message:
          description: The log message.
          title: Message
          type: string
        name:
          description: The logger name.
          title: Name
          type: string
        task_run_id:
          description: The task run ID associated with the log.
          format: uuid
          title: Task Run Id
          type: string
        timestamp:
          description: The log timestamp.
          format: date-time
          title: Timestamp
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
      required:
      - name
      - level
      - message
      - timestamp
      - flow_run_id
      title: Log
      type: object
    LogCreate:
      additionalProperties: false
      description: Data used by the Orion API to create a log.
      properties:
        flow_run_id:
          description: The flow run ID associated with the log.
          format: uuid
          title: Flow Run Id
          type: string
        level:
          description: The log level.
          title: Level
          type: integer
        message:
          description: The log message.
          title: Message
          type: string
        name:
          description: The logger name.
          title: Name
          type: string
        task_run_id:
          description: The task run ID associated with the log.
          format: uuid
          title: Task Run Id
          type: string
        timestamp:
          description: The log timestamp.
          format: date-time
          title: Timestamp
          type: string
      required:
      - name
      - level
      - message
      - timestamp
      - flow_run_id
      title: LogCreate
      type: object
    LogFilter:
      additionalProperties: false
      description: Filter logs. Only logs matching all criteria will be returned
      properties:
        flow_run_id:
          allOf:
          - $ref: '#/components/schemas/LogFilterFlowRunId'
          description: Filter criteria for `Log.flow_run_id`
          title: Flow Run Id
        level:
          allOf:
          - $ref: '#/components/schemas/LogFilterLevel'
          description: Filter criteria for `Log.level`
          title: Level
        operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          default: and_
          description: Operator for combining filter criteria. Defaults to 'and_'.
        task_run_id:
          allOf:
          - $ref: '#/components/schemas/LogFilterTaskRunId'
          description: Filter criteria for `Log.task_run_id`
          title: Task Run Id
        timestamp:
          allOf:
          - $ref: '#/components/schemas/LogFilterTimestamp'
          description: Filter criteria for `Log.timestamp`
          title: Timestamp
      title: LogFilter
      type: object
    LogFilterFlowRunId:
      additionalProperties: false
      description: Filter by `Log.flow_run_id`.
      properties:
        any_:
          description: A list of flow run IDs to include
          items:
            format: uuid
            type: string
          title: 'Any '
          type: array
      title: LogFilterFlowRunId
      type: object
    LogFilterLevel:
      additionalProperties: false
      description: Filter by `Log.level`.
      properties:
        ge_:
          description: Include logs with a level greater than or equal to this level
          example: 20
          title: 'Ge '
          type: integer
        le_:
          description: Include logs with a level less than or equal to this level
          example: 50
          title: 'Le '
          type: integer
      title: LogFilterLevel
      type: object
    LogFilterTaskRunId:
      additionalProperties: false
      description: Filter by `Log.task_run_id`.
      properties:
        any_:
          description: A list of task run IDs to include
          items:
            format: uuid
            type: string
          title: 'Any '
          type: array
      title: LogFilterTaskRunId
      type: object
    LogFilterTimestamp:
      additionalProperties: false
      description: Filter by `Log.timestamp`.
      properties:
        after_:
          description: Only include logs with a timestamp at or after this time
          format: date-time
          title: 'After '
          type: string
        before_:
          description: Only include logs with a timestamp at or before this time
          format: date-time
          title: 'Before '
          type: string
      title: LogFilterTimestamp
      type: object
    LogSort:
      description: Defines log sorting options.
      enum:
      - TIMESTAMP_ASC
      - TIMESTAMP_DESC
      - LEVEL_ASC
      - LEVEL_DESC
      - FLOW_RUN_ID_ASC
      - FLOW_RUN_ID_DESC
      - TASK_RUN_ID_ASC
      - TASK_RUN_ID_DESC
      title: LogSort
      type: string
    Operator:
      description: Operators for combining filter criteria.
      enum:
      - and_
      - or_
      title: Operator
      type: string
    OrchestrationResult:
      description: A container for the output of state orchestration.
      properties:
        details:
          anyOf:
          - $ref: '#/components/schemas/StateAcceptDetails'
          - $ref: '#/components/schemas/StateWaitDetails'
          - $ref: '#/components/schemas/StateRejectDetails'
          - $ref: '#/components/schemas/StateAbortDetails'
          title: Details
        state:
          $ref: '#/components/schemas/State'
        status:
          $ref: '#/components/schemas/SetStateStatus'
      required:
      - status
      - details
      title: OrchestrationResult
      type: object
    Parameter:
      description: Represents a parameter input to a task run.
      properties:
        input_type:
          default: parameter
          enum:
          - parameter
          title: Input Type
          type: string
        name:
          title: Name
          type: string
      required:
      - name
      title: Parameter
      type: object
    QueueFilter:
      description: Filter criteria definition for a work queue.
      properties:
        deployment_ids:
          description: Only include flow runs from these deployments in the work queue.
          items:
            format: uuid
            type: string
          title: Deployment Ids
          type: array
        tags:
          description: Only include flow runs with these tags in the work queue.
          items:
            type: string
          title: Tags
          type: array
      title: QueueFilter
      type: object
    RRuleSchedule:
      additionalProperties: false
      description: |-
        RRule schedule, based on the iCalendar standard
        ([RFC 5545](https://datatracker.ietf.org/doc/html/rfc5545)) as
        implemented in `dateutils.rrule`.

        RRules are appropriate for any kind of calendar-date manipulation, including
        irregular intervals, repetition, exclusions, week day or day-of-month
        adjustments, and more.

        Note that as a calendar-oriented standard, `RRuleSchedules` are sensitive to
        to the initial timezone provided. A 9am daily schedule with a daylight saving
        time-aware start date will maintain a local 9am time through DST boundaries;
        a 9am daily schedule with a UTC start date will maintain a 9am UTC time.
      properties:
        rrule:
          title: Rrule
          type: string
        timezone:
          example: America/New_York
          title: Timezone
          type: string
      required:
      - rrule
      title: RRuleSchedule
      type: object
    SavedSearch:
      description: An ORM representation of saved search data. Represents a set of
        filter criteria.
      properties:
        created:
          format: date-time
          title: Created
          type: string
        filters:
          description: The filter set for the saved search.
          items:
            $ref: '#/components/schemas/SavedSearchFilter'
          title: Filters
          type: array
        id:
          format: uuid
          title: Id
          type: string
        name:
          description: The name of the saved search.
          title: Name
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
      required:
      - name
      title: SavedSearch
      type: object
    SavedSearchCreate:
      additionalProperties: false
      description: Data used by the Orion API to create a saved search.
      properties:
        filters:
          description: The filter set for the saved search.
          items:
            $ref: '#/components/schemas/SavedSearchFilter'
          title: Filters
          type: array
        name:
          description: The name of the saved search.
          title: Name
          type: string
      required:
      - name
      title: SavedSearchCreate
      type: object
    SavedSearchFilter:
      description: A filter for a saved search model. Intended for use by the Prefect
        UI.
      properties:
        object:
          description: The object over which to filter.
          title: Object
          type: string
        operation:
          description: The operator to apply to the object. For example, `equals`.
          title: Operation
          type: string
        property:
          description: The property of the object on which to filter.
          title: Property
          type: string
        type:
          description: The type of the property.
          title: Type
          type: string
        value:
          description: A JSON-compatible value for the filter.
          title: Value
      required:
      - object
      - property
      - type
      - operation
      - value
      title: SavedSearchFilter
      type: object
    SetStateStatus:
      description: Enumerates return statuses for setting run states.
      enum:
      - ACCEPT
      - REJECT
      - ABORT
      - WAIT
      title: SetStateStatus
      type: string
    Settings:
      additionalProperties: false
      description: |-
        Contains validated Prefect settings.

        Settings should be accessed using the relevant `Setting` object. For example:
        ```python
        from prefect.settings import PREFECT_HOME
        PREFECT_HOME.value()
        ```

        Accessing a setting attribute directly will ignore any `value_callback` mutations.
        This is not recommended:
        ```python
        from prefect.settings import Settings
        Settings().PREFECT_PROFILES_PATH  # PosixPath('${PREFECT_HOME}/profiles.toml')
        ```
      properties:
        PREFECT_AGENT_PREFETCH_SECONDS:
          default: 10
          description: |-
            Agents will look for scheduled runs this many seconds in
                the future and attempt to run them. This accounts for any additional
                infrastructure spin-up time or latency in preparing a flow run. Note
                flow runs will not start before their scheduled time, even if they are
                prefetched. Defaults to `10`.
          env_names:
          - prefect_agent_prefetch_seconds
          title: Prefect Agent Prefetch Seconds
          type: integer
        PREFECT_AGENT_QUERY_INTERVAL:
          default: 5
          description: |-
            The agent loop interval, in seconds. Agents will check
                for new runs this often. Defaults to `5`.
          env_names:
          - prefect_agent_query_interval
          title: Prefect Agent Query Interval
          type: number
        PREFECT_API_KEY:
          description: |-
            API key used to authenticate against Orion API.
                Defaults to `None`.
          env_names:
          - prefect_api_key
          title: Prefect Api Key
          type: string
        PREFECT_API_REQUEST_TIMEOUT:
          default: 30.0
          description: The default timeout for requests to the API
          env_names:
          - prefect_api_request_timeout
          title: Prefect Api Request Timeout
          type: number
        PREFECT_API_URL:
          description: |-
            If provided, the url of an externally-hosted Orion API.
                Defaults to `None`.
          env_names:
          - prefect_api_url
          title: Prefect Api Url
          type: string
        PREFECT_CLI_COLORS:
          default: true
          description: |-
            If `True`, use colors in CLI output. If `False`,
                    output will not include colors codes. Defaults to `True`.
          env_names:
          - prefect_cli_colors
          title: Prefect Cli Colors
          type: boolean
        PREFECT_CLI_WRAP_LINES:
          default: true
          description: |-
            If `True`, wrap text by inserting new lines in long lines
                    in CLI output. If `False`, output will not be wrapped. Defaults to `True`.
          env_names:
          - prefect_cli_wrap_lines
          title: Prefect Cli Wrap Lines
          type: boolean
        PREFECT_CLOUD_URL:
          default: https://api.prefect.cloud/api
          description: API URL for Prefect Cloud
          env_names:
          - prefect_cloud_url
          title: Prefect Cloud Url
          type: string
        PREFECT_DEBUG_MODE:
          default: false
          description: |-
            If `True`, places the API in debug mode. This may modify
                    behavior to facilitate debugging, including extra logs and other verbose
                    assistance. Defaults to `False`.
          env_names:
          - prefect_debug_mode
          title: Prefect Debug Mode
          type: boolean
        PREFECT_HOME:
          default: ~/.prefect
          description: |-
            Prefect's home directory. Defaults to `~/.prefect`. This
                    directory may be created automatically when required.
          env_names:
          - prefect_home
          format: path
          title: Prefect Home
          type: string
        PREFECT_LOCAL_STORAGE_PATH:
          default: ${PREFECT_HOME}/storage
          description: The path to a directory to store things in.
          env_names:
          - prefect_local_storage_path
          format: path
          title: Prefect Local Storage Path
          type: string
        PREFECT_LOGGING_EXTRA_LOGGERS:
          default: ''
          description: "Additional loggers to attach to Prefect logging at runtime.\n\
            \    Values should be comma separated. The handlers attached to the 'prefect'\
            \ logger\n    will be added to these loggers. Additionally, if the level\
            \ is not set, it will\n    be set to the same level as the 'prefect' logger.\n\
            \    "
          env_names:
          - prefect_logging_extra_loggers
          title: Prefect Logging Extra Loggers
          type: string
        PREFECT_LOGGING_LEVEL:
          default: INFO
          description: |-
            The default logging level for Prefect loggers. Defaults to
                "INFO" during normal operation. Is forced to "DEBUG" during debug mode.
          env_names:
          - prefect_logging_level
          title: Prefect Logging Level
          type: string
        PREFECT_LOGGING_ORION_BATCH_INTERVAL:
          default: 2.0
          description: The number of seconds between batched writes of logs to Orion.
          env_names:
          - prefect_logging_orion_batch_interval
          title: Prefect Logging Orion Batch Interval
          type: number
        PREFECT_LOGGING_ORION_BATCH_SIZE:
          default: 4000000
          description: The maximum size in bytes for a batch of logs.
          env_names:
          - prefect_logging_orion_batch_size
          title: Prefect Logging Orion Batch Size
          type: integer
        PREFECT_LOGGING_ORION_ENABLED:
          default: true
          description: |-
            Should logs be sent to Orion? If False, logs sent to the
                OrionHandler will not be sent to the API.
          env_names:
          - prefect_logging_orion_enabled
          title: Prefect Logging Orion Enabled
          type: boolean
        PREFECT_LOGGING_ORION_MAX_LOG_SIZE:
          default: 1000000
          description: The maximum size in bytes for a single log.
          env_names:
          - prefect_logging_orion_max_log_size
          title: Prefect Logging Orion Max Log Size
          type: integer
        PREFECT_LOGGING_SERVER_LEVEL:
          default: WARNING
          description: The default logging level for the Orion API.
          env_names:
          - prefect_logging_server_level
          title: Prefect Logging Server Level
          type: string
        PREFECT_LOGGING_SETTINGS_PATH:
          default: ${PREFECT_HOME}/logging.yml
          description: |-
            The path to a custom YAML logging configuration file. If
                no file is found, the default `logging.yml` is used. Defaults to a logging.yml in the Prefect home directory.
          env_names:
          - prefect_logging_settings_path
          format: path
          title: Prefect Logging Settings Path
          type: string
        PREFECT_ORION_ANALYTICS_ENABLED:
          default: true
          description: If True, Orion sends anonymous data (e.g. count of flow runs,
            package version) to Prefect to help us improve.
          env_names:
          - prefect_orion_analytics_enabled
          title: Prefect Orion Analytics Enabled
          type: boolean
        PREFECT_ORION_API_DEFAULT_LIMIT:
          default: 200
          description: |-
            The default limit applied to queries that can return
                multiple objects, such as `POST /flow_runs/filter`.
          env_names:
          - prefect_orion_api_default_limit
          title: Prefect Orion Api Default Limit
          type: integer
        PREFECT_ORION_API_HOST:
          default: 127.0.0.1
          description: The API's host address (defaults to `127.0.0.1`).
          env_names:
          - prefect_orion_api_host
          title: Prefect Orion Api Host
          type: string
        PREFECT_ORION_API_PORT:
          default: 4200
          description: The API's port address (defaults to `4200`).
          env_names:
          - prefect_orion_api_port
          title: Prefect Orion Api Port
          type: integer
        PREFECT_ORION_DATABASE_CONNECTION_TIMEOUT:
          default: 5
          description: |-
            A connection timeout, in seconds, applied to database
                connections. Defaults to `5`.
          env_names:
          - prefect_orion_database_connection_timeout
          title: Prefect Orion Database Connection Timeout
          type: number
        PREFECT_ORION_DATABASE_CONNECTION_URL:
          default: sqlite+aiosqlite:///${PREFECT_HOME}/orion.db
          description: |2

            A database connection URL in a SQLAlchemy-compatible
            format. Orion currently supports SQLite and Postgres. Note that all
            Orion engines must use an async driver - for SQLite, use
            `sqlite+aiosqlite` and for Postgres use `postgresql+asyncpg`.

            SQLite in-memory databases can be used by providing the url
            `sqlite+aiosqlite:///file::memory:?cache=shared&uri=true&check_same_thread=false`,
            which will allow the database to be accessed by multiple threads. Note
            that in-memory databases can not be accessed from multiple processes and
            should only be used for simple tests.

            Defaults to a sqlite database stored in the Prefect home directory.

            If you need to provide password via a different environment variable, you use
            the `PREFECT_ORION_DATABASE_PASSWORD` setting. For example:

            PREFECT_ORION_DATABASE_PASSWORD='mypassword'
            PREFECT_ORION_DATABASE_CONNECTION_URL='postgresql+asyncpg://postgres:${PREFECT_ORION_DATABASE_PASSWORD}@localhost/orion'
          env_names:
          - prefect_orion_database_connection_url
          title: Prefect Orion Database Connection Url
          type: string
        PREFECT_ORION_DATABASE_ECHO:
          default: false
          description: If `True`, SQLAlchemy will log all SQL issued to the database.
            Defaults to `False`.
          env_names:
          - prefect_orion_database_echo
          title: Prefect Orion Database Echo
          type: boolean
        PREFECT_ORION_DATABASE_MIGRATE_ON_START:
          default: true
          description: If `True`, the database will be upgraded on application creation.
            If `False`, the database will need to be upgraded manually.
          env_names:
          - prefect_orion_database_migrate_on_start
          title: Prefect Orion Database Migrate On Start
          type: boolean
        PREFECT_ORION_DATABASE_PASSWORD:
          description: |-
            Password to template into the `PREFECT_ORION_DATABASE_CONNECTION_URL`.
                This is useful if the password must be provided separately from the connection URL.
                To use this setting, you must include it in your connection URL.
          env_names:
          - prefect_orion_database_password
          title: Prefect Orion Database Password
          type: string
        PREFECT_ORION_DATABASE_TIMEOUT:
          default: 1
          description: |-
            A statement timeout, in seconds, applied to all database
                interactions made by the API. Defaults to `1`.
          env_names:
          - prefect_orion_database_timeout
          title: Prefect Orion Database Timeout
          type: number
        PREFECT_ORION_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED:
          default: true
          description: Whether or not to start the flow run notifications service
            in the Orion application. If disabled, you will need to run this service
            separately to send flow run notifications.
          env_names:
          - prefect_orion_services_flow_run_notifications_enabled
          title: Prefect Orion Services Flow Run Notifications Enabled
          type: boolean
        PREFECT_ORION_SERVICES_LATE_RUNS_AFTER_SECONDS:
          default: 5.0
          description: |-
            The late runs service will mark runs as late after they
                have exceeded their scheduled start time by this many seconds. Defaults
                to `5` seconds.
          env_names:
          - prefect_orion_services_late_runs_after_seconds
          format: time-delta
          title: Prefect Orion Services Late Runs After Seconds
          type: number
        PREFECT_ORION_SERVICES_LATE_RUNS_ENABLED:
          default: true
          description: Whether or not to start the late runs service in the Orion
            application. If disabled, you will need to run this service separately
            to have runs past their scheduled start time marked as late.
          env_names:
          - prefect_orion_services_late_runs_enabled
          title: Prefect Orion Services Late Runs Enabled
          type: boolean
        PREFECT_ORION_SERVICES_LATE_RUNS_LOOP_SECONDS:
          default: 5
          description: |-
            The late runs service will look for runs to mark as late
                this often. Defaults to `5`.
          env_names:
          - prefect_orion_services_late_runs_loop_seconds
          title: Prefect Orion Services Late Runs Loop Seconds
          type: number
        PREFECT_ORION_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE:
          default: 100
          description: |-
            The number of deployments the scheduler will attempt to
                schedule in a single batch. If there are more deployments than the batch
                size, the scheduler immediately attempts to schedule the next batch; it
                does not sleep for `scheduler_loop_seconds` until it has visited every
                deployment once. Defaults to `100`.
          env_names:
          - prefect_orion_services_scheduler_deployment_batch_size
          title: Prefect Orion Services Scheduler Deployment Batch Size
          type: integer
        PREFECT_ORION_SERVICES_SCHEDULER_ENABLED:
          default: true
          description: Whether or not to start the scheduling service in the Orion
            application. If disabled, you will need to run this service separately
            to schedule runs for deployments.
          env_names:
          - prefect_orion_services_scheduler_enabled
          title: Prefect Orion Services Scheduler Enabled
          type: boolean
        PREFECT_ORION_SERVICES_SCHEDULER_INSERT_BATCH_SIZE:
          default: 500
          description: "The number of flow runs the scheduler will attempt to insert\n\
            \    in one batch across all deployments. If the number of flow runs to\n\
            \    schedule exceeds this amount, the runs will be inserted in batches\
            \ of this size. Defaults to `500`.\n    "
          env_names:
          - prefect_orion_services_scheduler_insert_batch_size
          title: Prefect Orion Services Scheduler Insert Batch Size
          type: integer
        PREFECT_ORION_SERVICES_SCHEDULER_LOOP_SECONDS:
          default: 60
          description: |-
            The scheduler loop interval, in seconds. This determines
                how often the scheduler will attempt to schedule new flow runs, but has no
                impact on how quickly either flow runs or task runs are actually executed.
                Defaults to `60`.
          env_names:
          - prefect_orion_services_scheduler_loop_seconds
          title: Prefect Orion Services Scheduler Loop Seconds
          type: number
        PREFECT_ORION_SERVICES_SCHEDULER_MAX_RUNS:
          default: 100
          description: "The scheduler will attempt to schedule up to this many\n \
            \   auto-scheduled runs in the future. Note that runs may have fewer than\n\
            \    this many scheduled runs, depending on the value of\n    `scheduler_max_scheduled_time`.\
            \  Defaults to `100`.\n    "
          env_names:
          - prefect_orion_services_scheduler_max_runs
          title: Prefect Orion Services Scheduler Max Runs
          type: integer
        PREFECT_ORION_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME:
          default: 8640000.0
          description: "The scheduler will create new runs up to this far in the\n\
            \    future. Note that this setting will take precedence over\n    `scheduler_max_runs`:\
            \ if a flow runs once a month and\n    `scheduled_max_scheduled_time`\
            \ is three months, then only three runs will be\n    scheduled. Defaults\
            \ to 100 days (`8640000` seconds).\n    "
          env_names:
          - prefect_orion_services_scheduler_max_scheduled_time
          format: time-delta
          title: Prefect Orion Services Scheduler Max Scheduled Time
          type: number
        PREFECT_ORION_UI_API_URL:
          description: |-
            The connection url for communication from the UI to the API.
                Defaults to `PREFECT_API_URL` if set. Otherwise, the default URL is generated from
                `PREFECT_ORION_API_HOST` and `PREFECT_ORION_API_PORT`. If providing a custom value,
                the aforementioned settings may be templated into the given string.
          env_names:
          - prefect_orion_ui_api_url
          title: Prefect Orion Ui Api Url
          type: string
        PREFECT_ORION_UI_ENABLED:
          default: true
          description: Whether or not to serve the Orion UI.
          env_names:
          - prefect_orion_ui_enabled
          title: Prefect Orion Ui Enabled
          type: boolean
        PREFECT_PROFILES_PATH:
          default: ${PREFECT_HOME}/profiles.toml
          description: The path to a profiles configuration files.
          env_names:
          - prefect_profiles_path
          format: path
          title: Prefect Profiles Path
          type: string
        PREFECT_TEST_MODE:
          default: false
          description: |-
            If `True`, places the API in test mode. This may modify
                    behavior to faciliate testing. Defaults to `False`.
          env_names:
          - prefect_test_mode
          title: Prefect Test Mode
          type: boolean
        PREFECT_TEST_SETTING:
          description: |-
            This variable only exists to faciliate testing of settings.
                If accessed when `PREFECT_TEST_MODE` is not set, `None` is returned.
          env_names:
          - prefect_test_setting
          title: Prefect Test Setting
      title: Settings
      type: object
    SimpleFlowRun:
      description: |-
        A base pydantic.BaseModel for all Prefect schemas and pydantic models.

        As the basis for most Prefect schemas, this base model usually ignores extra
        fields that are passed to it at instantiation. Because adding new fields to
        API payloads is not considered a breaking change, this ensures that any
        Prefect client loading data from a server running a possibly-newer version
        of Prefect will be able to process those new fields gracefully. However,
        when PREFECT_TEST_MODE is on, extra fields are forbidden in order to catch
        subtle unintentional testing errors.
      properties:
        duration:
          description: The total run time of the run.
          format: time-delta
          title: Duration
          type: number
        id:
          description: The flow run id.
          format: uuid
          title: Id
          type: string
        lateness:
          description: The delay between the expected and actual start time.
          format: time-delta
          title: Lateness
          type: number
        state_type:
          allOf:
          - $ref: '#/components/schemas/StateType'
          description: The state type.
        timestamp:
          description: The start time of the run, or the expected start time if it
            hasn't run yet.
          format: date-time
          title: Timestamp
          type: string
      required:
      - id
      - state_type
      - timestamp
      - duration
      - lateness
      title: SimpleFlowRun
      type: object
    State:
      description: Represents the state of a run.
      properties:
        data:
          $ref: '#/components/schemas/DataDocument'
        id:
          format: uuid
          title: Id
          type: string
        message:
          example: Run started
          title: Message
          type: string
        name:
          title: Name
          type: string
        state_details:
          $ref: '#/components/schemas/StateDetails'
        timestamp:
          format: date-time
          title: Timestamp
          type: string
        type:
          $ref: '#/components/schemas/StateType'
      required:
      - type
      title: State
      type: object
    StateAbortDetails:
      description: Details associated with an ABORT state transition.
      properties:
        reason:
          description: The reason why the state transition was aborted.
          title: Reason
          type: string
        type:
          default: abort_details
          description: The type of state transition detail. Used to ensure pydantic
            does not coerce into a different type.
          enum:
          - abort_details
          title: Type
          type: string
      title: StateAbortDetails
      type: object
    StateAcceptDetails:
      description: Details associated with an ACCEPT state transition.
      properties:
        type:
          default: accept_details
          description: The type of state transition detail. Used to ensure pydantic
            does not coerce into a different type.
          enum:
          - accept_details
          title: Type
          type: string
      title: StateAcceptDetails
      type: object
    StateCreate:
      additionalProperties: false
      description: Data used by the Orion API to create a new state.
      properties:
        data:
          $ref: '#/components/schemas/DataDocument'
        message:
          example: Run started
          title: Message
          type: string
        name:
          title: Name
          type: string
        state_details:
          $ref: '#/components/schemas/StateDetails'
        type:
          $ref: '#/components/schemas/StateType'
      required:
      - type
      title: StateCreate
      type: object
    StateDetails:
      description: |-
        A base pydantic.BaseModel for all Prefect schemas and pydantic models.

        As the basis for most Prefect schemas, this base model usually ignores extra
        fields that are passed to it at instantiation. Because adding new fields to
        API payloads is not considered a breaking change, this ensures that any
        Prefect client loading data from a server running a possibly-newer version
        of Prefect will be able to process those new fields gracefully. However,
        when PREFECT_TEST_MODE is on, extra fields are forbidden in order to catch
        subtle unintentional testing errors.
      properties:
        cache_expiration:
          format: date-time
          title: Cache Expiration
          type: string
        cache_key:
          title: Cache Key
          type: string
        child_flow_run_id:
          format: uuid
          title: Child Flow Run Id
          type: string
        flow_run_id:
          format: uuid
          title: Flow Run Id
          type: string
        scheduled_time:
          format: date-time
          title: Scheduled Time
          type: string
        task_run_id:
          format: uuid
          title: Task Run Id
          type: string
      title: StateDetails
      type: object
    StateRejectDetails:
      description: Details associated with a REJECT state transition.
      properties:
        reason:
          description: The reason why the state transition was rejected.
          title: Reason
          type: string
        type:
          default: reject_details
          description: The type of state transition detail. Used to ensure pydantic
            does not coerce into a different type.
          enum:
          - reject_details
          title: Type
          type: string
      title: StateRejectDetails
      type: object
    StateType:
      description: Enumeration of state types.
      enum:
      - SCHEDULED
      - PENDING
      - RUNNING
      - COMPLETED
      - FAILED
      - CANCELLED
      - CRASHED
      title: StateType
      type: string
    StateWaitDetails:
      description: Details associated with a WAIT state transition.
      properties:
        delay_seconds:
          description: The length of time in seconds the client should wait before
            transitioning states.
          title: Delay Seconds
          type: integer
        reason:
          description: The reason why the state transition should wait.
          title: Reason
          type: string
        type:
          default: wait_details
          description: The type of state transition detail. Used to ensure pydantic
            does not coerce into a different type.
          enum:
          - wait_details
          title: Type
          type: string
      required:
      - delay_seconds
      title: StateWaitDetails
      type: object
    TaskRun:
      description: An ORM representation of task run data.
      properties:
        cache_expiration:
          description: Specifies when the cached state should expire.
          format: date-time
          title: Cache Expiration
          type: string
        cache_key:
          description: An optional cache key. If a COMPLETED state associated with
            this cache key is found, the cached COMPLETED state will be used instead
            of executing the task run.
          title: Cache Key
          type: string
        created:
          format: date-time
          title: Created
          type: string
        dynamic_key:
          description: A dynamic key used to differentiate between multiple runs of
            the same task within the same flow run.
          title: Dynamic Key
          type: string
        empirical_policy:
          $ref: '#/components/schemas/TaskRunPolicy'
        end_time:
          description: The actual end time.
          format: date-time
          title: End Time
          type: string
        estimated_run_time:
          default: 0.0
          description: A real-time estimate of total run time.
          format: time-delta
          title: Estimated Run Time
          type: number
        estimated_start_time_delta:
          default: 0.0
          description: The difference between actual and expected start time.
          format: time-delta
          title: Estimated Start Time Delta
          type: number
        expected_start_time:
          description: The task run's expected start time.
          format: date-time
          title: Expected Start Time
          type: string
        flow_run_id:
          description: The flow run id of the task run.
          format: uuid
          title: Flow Run Id
          type: string
        id:
          format: uuid
          title: Id
          type: string
        name:
          example: my-task-run
          title: Name
          type: string
        next_scheduled_start_time:
          description: The next time the task run is scheduled to start.
          format: date-time
          title: Next Scheduled Start Time
          type: string
        run_count:
          default: 0
          description: The number of times the task run has been executed.
          title: Run Count
          type: integer
        start_time:
          description: The actual start time.
          format: date-time
          title: Start Time
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/State'
          description: The current task run state.
          title: State
        state_id:
          description: The id of the current task run state.
          format: uuid
          title: State Id
          type: string
        state_name:
          description: The name of the current task run state.
          title: State Name
          type: string
        state_type:
          allOf:
          - $ref: '#/components/schemas/StateType'
          description: The type of the current task run state.
        tags:
          description: A list of tags for the task run.
          example:
          - tag-1
          - tag-2
          items:
            type: string
          title: Tags
          type: array
        task_inputs:
          additionalProperties:
            items:
              anyOf:
              - $ref: '#/components/schemas/TaskRunResult'
              - $ref: '#/components/schemas/Parameter'
              - $ref: '#/components/schemas/Constant'
            type: array
          description: Tracks the source of inputs to a task run. Used for internal
            bookkeeping.
          title: Task Inputs
          type: object
        task_key:
          description: A unique identifier for the task being run.
          title: Task Key
          type: string
        task_version:
          description: The version of the task being run.
          title: Task Version
          type: string
        total_run_time:
          default: 0.0
          description: Total run time. If the task run was executed multiple times,
            the time of each run will be summed.
          format: time-delta
          title: Total Run Time
          type: number
        updated:
          format: date-time
          title: Updated
          type: string
      required:
      - flow_run_id
      - task_key
      - dynamic_key
      title: TaskRun
      type: object
    TaskRunCreate:
      description: Data used by the Orion API to create a task run
      properties:
        cache_expiration:
          description: Specifies when the cached state should expire.
          format: date-time
          title: Cache Expiration
          type: string
        cache_key:
          description: An optional cache key. If a COMPLETED state associated with
            this cache key is found, the cached COMPLETED state will be used instead
            of executing the task run.
          title: Cache Key
          type: string
        dynamic_key:
          description: A dynamic key used to differentiate between multiple runs of
            the same task within the same flow run.
          title: Dynamic Key
          type: string
        empirical_policy:
          $ref: '#/components/schemas/TaskRunPolicy'
        flow_run_id:
          description: The flow run id of the task run.
          format: uuid
          title: Flow Run Id
          type: string
        name:
          example: my-task-run
          title: Name
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/StateCreate'
          description: The state of the task run to create
          title: State
        tags:
          description: A list of tags for the task run.
          example:
          - tag-1
          - tag-2
          items:
            type: string
          title: Tags
          type: array
        task_inputs:
          additionalProperties:
            items:
              anyOf:
              - $ref: '#/components/schemas/TaskRunResult'
              - $ref: '#/components/schemas/Parameter'
              - $ref: '#/components/schemas/Constant'
            type: array
          description: Tracks the source of inputs to a task run. Used for internal
            bookkeeping.
          title: Task Inputs
          type: object
        task_key:
          description: A unique identifier for the task being run.
          title: Task Key
          type: string
        task_version:
          description: The version of the task being run.
          title: Task Version
          type: string
      required:
      - flow_run_id
      - task_key
      - dynamic_key
      title: TaskRunCreate
      type: object
    TaskRunFilter:
      additionalProperties: false
      description: Filter task runs. Only task runs matching all criteria will be
        returned
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/TaskRunFilterId'
          description: Filter criteria for `TaskRun.id`
          title: Id
        name:
          allOf:
          - $ref: '#/components/schemas/TaskRunFilterName'
          description: Filter criteria for `TaskRun.name`
          title: Name
        operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          default: and_
          description: Operator for combining filter criteria. Defaults to 'and_'.
        start_time:
          allOf:
          - $ref: '#/components/schemas/TaskRunFilterStartTime'
          description: Filter criteria for `TaskRun.start_time`
          title: Start Time
        state:
          allOf:
          - $ref: '#/components/schemas/TaskRunFilterState'
          description: Filter criteria for `TaskRun.state`
          title: State
        subflow_runs:
          allOf:
          - $ref: '#/components/schemas/TaskRunFilterSubFlowRuns'
          description: Filter criteria for `TaskRun.subflow_run`
          title: Subflow Runs
        tags:
          allOf:
          - $ref: '#/components/schemas/TaskRunFilterTags'
          description: Filter criteria for `TaskRun.tags`
          title: Tags
      title: TaskRunFilter
      type: object
    TaskRunFilterId:
      additionalProperties: false
      description: Filter by `TaskRun.id`.
      properties:
        any_:
          description: A list of task run ids to include
          items:
            format: uuid
            type: string
          title: 'Any '
          type: array
      title: TaskRunFilterId
      type: object
    TaskRunFilterName:
      additionalProperties: false
      description: Filter by `TaskRun.name`.
      properties:
        any_:
          description: A list of task run names to include
          example:
          - my-task-run-1
          - my-task-run-2
          items:
            type: string
          title: 'Any '
          type: array
        like_:
          description: A case-insensitive partial match. For example,  passing 'marvin'
            will match 'marvin', 'sad-Marvin', and 'marvin-robot'.
          example: marvin
          title: 'Like '
          type: string
      title: TaskRunFilterName
      type: object
    TaskRunFilterStartTime:
      additionalProperties: false
      description: Filter by `TaskRun.start_time`.
      properties:
        after_:
          description: Only include task runs starting at or after this time
          format: date-time
          title: 'After '
          type: string
        before_:
          description: Only include task runs starting at or before this time
          format: date-time
          title: 'Before '
          type: string
        is_null_:
          description: If true, only return task runs without a start time
          title: 'Is Null '
          type: boolean
      title: TaskRunFilterStartTime
      type: object
    TaskRunFilterState:
      additionalProperties: false
      description: Base model for Prefect filters
      properties:
        name:
          $ref: '#/components/schemas/TaskRunFilterStateName'
        type:
          $ref: '#/components/schemas/TaskRunFilterStateType'
      title: TaskRunFilterState
      type: object
    TaskRunFilterStateName:
      additionalProperties: false
      description: Base model for Prefect filters
      properties:
        any_:
          description: A list of task run state names to include
          items:
            type: string
          title: 'Any '
          type: array
      title: TaskRunFilterStateName
      type: object
    TaskRunFilterStateType:
      additionalProperties: false
      description: Filter by `TaskRun.state_type`.
      properties:
        any_:
          description: A list of task run state types to include
          items:
            $ref: '#/components/schemas/StateType'
          type: array
      title: TaskRunFilterStateType
      type: object
    TaskRunFilterSubFlowRuns:
      additionalProperties: false
      description: Filter by `TaskRun.subflow_run`.
      properties:
        exists_:
          description: If true, only include task runs that are subflow run parents;
            if false, exclude parent task runs
          title: 'Exists '
          type: boolean
      title: TaskRunFilterSubFlowRuns
      type: object
    TaskRunFilterTags:
      additionalProperties: false
      description: Filter by `TaskRun.tags`.
      properties:
        all_:
          description: A list of tags. Task runs will be returned only if their tags
            are a superset of the list
          example:
          - tag-1
          - tag-2
          items:
            type: string
          title: 'All '
          type: array
        is_null_:
          description: If true, only include task runs without tags
          title: 'Is Null '
          type: boolean
        operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          default: and_
          description: Operator for combining filter criteria. Defaults to 'and_'.
      title: TaskRunFilterTags
      type: object
    TaskRunPolicy:
      description: Defines of how a task run should retry.
      properties:
        max_retries:
          default: 0
          title: Max Retries
          type: integer
        retry_delay_seconds:
          default: 0
          title: Retry Delay Seconds
          type: number
      title: TaskRunPolicy
      type: object
    TaskRunResult:
      description: Represents a task run result input to another task run.
      properties:
        id:
          format: uuid
          title: Id
          type: string
        input_type:
          default: task_run
          enum:
          - task_run
          title: Input Type
          type: string
      required:
      - id
      title: TaskRunResult
      type: object
    TaskRunSort:
      description: Defines task run sorting options.
      enum:
      - ID_DESC
      - EXPECTED_START_TIME_ASC
      - EXPECTED_START_TIME_DESC
      - NAME_ASC
      - NAME_DESC
      - NEXT_SCHEDULED_START_TIME_ASC
      - END_TIME_DESC
      title: TaskRunSort
      type: string
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    WorkQueue:
      description: An ORM representation of a work queue
      properties:
        concurrency_limit:
          description: An optional concurrency limit for the work queue.
          title: Concurrency Limit
          type: integer
        created:
          format: date-time
          title: Created
          type: string
        description:
          default: ''
          description: An optional description for the work queue.
          title: Description
          type: string
        filter:
          allOf:
          - $ref: '#/components/schemas/QueueFilter'
          description: Filter criteria for the work queue.
          title: Filter
        id:
          format: uuid
          title: Id
          type: string
        is_paused:
          default: false
          description: Whether or not the work queue is paused.
          title: Is Paused
          type: boolean
        name:
          description: The name of the work queue.
          title: Name
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
      required:
      - name
      title: WorkQueue
      type: object
    WorkQueueCreate:
      additionalProperties: false
      description: Data used by the Orion API to create a work queue.
      properties:
        concurrency_limit:
          description: An optional concurrency limit for the work queue.
          title: Concurrency Limit
          type: integer
        description:
          default: ''
          description: An optional description for the work queue.
          title: Description
          type: string
        filter:
          allOf:
          - $ref: '#/components/schemas/QueueFilter'
          description: Filter criteria for the work queue.
          title: Filter
        is_paused:
          default: false
          description: Whether or not the work queue is paused.
          title: Is Paused
          type: boolean
        name:
          description: The name of the work queue.
          title: Name
          type: string
      required:
      - name
      title: WorkQueueCreate
      type: object
    WorkQueueUpdate:
      additionalProperties: false
      description: Data used by the Orion API to update a work queue.
      properties:
        concurrency_limit:
          description: An optional concurrency limit for the work queue.
          title: Concurrency Limit
          type: integer
        description:
          default: ''
          description: An optional description for the work queue.
          title: Description
          type: string
        filter:
          allOf:
          - $ref: '#/components/schemas/QueueFilter'
          description: Filter criteria for the work queue.
          title: Filter
        is_paused:
          default: false
          description: Whether or not the work queue is paused.
          title: Is Paused
          type: boolean
        name:
          description: The name of the work queue.
          title: Name
          type: string
      title: WorkQueueUpdate
      type: object
info:
  title: Prefect Orion API
  version: 2.0.1+98.g651c319b5.dirty
  x-logo:
    url: static/prefect-logo-mark-gradient.png
openapi: 3.0.2
paths:
  /api/admin/database/clear:
    post:
      description: Clear all database tables without dropping them.
      operationId: clear_database_admin_database_clear_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_clear_database_admin_database_clear_post'
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Clear Database
      tags:
      - Admin
  /api/admin/database/create:
    post:
      description: Create all database objects.
      operationId: create_database_admin_database_create_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_create_database_admin_database_create_post'
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Database
      tags:
      - Admin
  /api/admin/database/drop:
    post:
      description: Drop all database objects.
      operationId: drop_database_admin_database_drop_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_drop_database_admin_database_drop_post'
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Drop Database
      tags:
      - Admin
  /api/admin/settings:
    get:
      description: Get the current Orion settings
      operationId: read_settings_admin_settings_get
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Settings
      tags:
      - Admin
  /api/admin/version:
    get:
      description: Returns the Prefect version number
      operationId: read_version_admin_version_get
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Read Version Admin Version Get
                type: string
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Version
      tags:
      - Admin
  /api/block_capabilities/:
    get:
      operationId: read_available_block_capabilities_block_capabilities__get
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                title: Response Read Available Block Capabilities Block Capabilities  Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Available Block Capabilities
      tags:
      - Block capabilities
  /api/block_documents/:
    post:
      description: Create a new block document.
      operationId: create_block_document_block_documents__post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockDocumentCreate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockDocument'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Block Document
      tags:
      - Block documents
  /api/block_documents/filter:
    post:
      description: Query for block documents.
      operationId: read_block_documents_block_documents_filter_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_read_block_documents_block_documents_filter_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BlockDocument'
                title: Response Read Block Documents Block Documents Filter Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Block Documents
      tags:
      - Block documents
  /api/block_documents/{id}:
    delete:
      operationId: delete_block_document_block_documents__id__delete
      parameters:
      - description: The block document id
        in: path
        name: id
        required: true
        schema:
          description: The block document id
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Block Document
      tags:
      - Block documents
    get:
      operationId: read_block_document_by_id_block_documents__id__get
      parameters:
      - description: The block document id
        in: path
        name: id
        required: true
        schema:
          description: The block document id
          format: uuid
          title: Id
          type: string
      - description: Whether to include sensitive values in the block document.
        in: query
        name: include_secrets
        required: false
        schema:
          default: false
          description: Whether to include sensitive values in the block document.
          title: Include Secrets
          type: boolean
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockDocument'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Block Document By Id
      tags:
      - Block documents
    patch:
      operationId: update_block_document_data_block_documents__id__patch
      parameters:
      - description: The block document id
        in: path
        name: id
        required: true
        schema:
          description: The block document id
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockDocumentUpdate'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Block Document Data
      tags:
      - Block documents
  /api/block_schemas/:
    post:
      operationId: create_block_schema_block_schemas__post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockSchemaCreate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockSchema'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Block Schema
      tags:
      - Block schemas
  /api/block_schemas/checksum/{checksum}:
    get:
      operationId: read_block_schema_by_checksum_block_schemas_checksum__checksum__get
      parameters:
      - description: The block schema checksum
        in: path
        name: checksum
        required: true
        schema:
          description: The block schema checksum
          title: Checksum
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockSchema'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Block Schema By Checksum
      tags:
      - Block schemas
  /api/block_schemas/filter:
    post:
      description: Read all block schemas, optionally filtered by type
      operationId: read_block_schemas_block_schemas_filter_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_read_block_schemas_block_schemas_filter_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BlockSchema'
                title: Response Read Block Schemas Block Schemas Filter Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Block Schemas
      tags:
      - Block schemas
  /api/block_schemas/{id}:
    delete:
      description: Delete a block schema by id.
      operationId: delete_block_schema_block_schemas__id__delete
      parameters:
      - description: The block schema id
        in: path
        name: id
        required: true
        schema:
          description: The block schema id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Block Schema
      tags:
      - Block schemas
    get:
      description: Get a block schema by id.
      operationId: read_block_schema_by_id_block_schemas__id__get
      parameters:
      - description: The block schema id
        in: path
        name: id
        required: true
        schema:
          description: The block schema id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockSchema'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Block Schema By Id
      tags:
      - Block schemas
  /api/block_types/:
    post:
      description: Create a new block type
      operationId: create_block_type_block_types__post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockTypeCreate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockType'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Block Type
      tags:
      - Block types
  /api/block_types/filter:
    post:
      description: Gets all block types. Optionally limit return with limit and offset.
      operationId: read_block_types_block_types_filter_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_read_block_types_block_types_filter_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BlockType'
                title: Response Read Block Types Block Types Filter Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Block Types
      tags:
      - Block types
  /api/block_types/install_system_block_types:
    post:
      description: Install block types that the system expects to be present
      operationId: install_system_block_types_block_types_install_system_block_types_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Install System Block Types
      tags:
      - Block types
  /api/block_types/slug/{slug}:
    get:
      description: Get a block type by name.
      operationId: read_block_type_by_slug_block_types_slug__slug__get
      parameters:
      - description: The block type name
        in: path
        name: slug
        required: true
        schema:
          description: The block type name
          title: Slug
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockType'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Block Type By Slug
      tags:
      - Block types
  /api/block_types/slug/{slug}/block_documents:
    get:
      operationId: read_block_documents_for_block_type_block_types_slug__slug__block_documents_get
      parameters:
      - description: The block type name
        in: path
        name: slug
        required: true
        schema:
          description: The block type name
          title: Slug
          type: string
      - description: Whether to include sensitive values in the block document.
        in: query
        name: include_secrets
        required: false
        schema:
          default: false
          description: Whether to include sensitive values in the block document.
          title: Include Secrets
          type: boolean
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BlockDocument'
                title: Response Read Block Documents For Block Type Block Types Slug  Slug  Block
                  Documents Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Block Documents For Block Type
      tags:
      - Block types
      - Block types
      - Block documents
  /api/block_types/slug/{slug}/block_documents/name/{block_document_name}:
    get:
      operationId: read_block_document_by_name_for_block_type_block_types_slug__slug__block_documents_name__block_document_name__get
      parameters:
      - description: The block type name
        in: path
        name: slug
        required: true
        schema:
          description: The block type name
          title: Slug
          type: string
      - description: The block type name
        in: path
        name: block_document_name
        required: true
        schema:
          description: The block type name
          title: Block Document Name
          type: string
      - description: Whether to include sensitive values in the block document.
        in: query
        name: include_secrets
        required: false
        schema:
          default: false
          description: Whether to include sensitive values in the block document.
          title: Include Secrets
          type: boolean
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockDocument'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Block Document By Name For Block Type
      tags:
      - Block types
      - Block types
      - Block documents
  /api/block_types/{id}:
    delete:
      operationId: delete_block_type_block_types__id__delete
      parameters:
      - description: The block type ID
        in: path
        name: id
        required: true
        schema:
          description: The block type ID
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Block Type
      tags:
      - Block types
    get:
      description: Get a block type by ID.
      operationId: read_block_type_by_id_block_types__id__get
      parameters:
      - description: The block type ID
        in: path
        name: id
        required: true
        schema:
          description: The block type ID
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockType'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Block Type By Id
      tags:
      - Block types
    patch:
      description: Update a block type.
      operationId: update_block_type_block_types__id__patch
      parameters:
      - description: The block type ID
        in: path
        name: id
        required: true
        schema:
          description: The block type ID
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockTypeUpdate'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Block Type
      tags:
      - Block types
  /api/concurrency_limits/:
    post:
      operationId: create_concurrency_limit_concurrency_limits__post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConcurrencyLimitCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrencyLimit'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Concurrency Limit
      tags:
      - Concurrency Limits
  /api/concurrency_limits/filter:
    post:
      description: |-
        Query for concurrency limits.

        For each concurrency limit the `active slots` field contains a list of TaskRun IDs
        currently using a concurrency slot for the specified tag.
      operationId: read_concurrency_limits_concurrency_limits_filter_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_read_concurrency_limits_concurrency_limits_filter_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConcurrencyLimit'
                title: Response Read Concurrency Limits Concurrency Limits Filter
                  Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Concurrency Limits
      tags:
      - Concurrency Limits
  /api/concurrency_limits/tag/{tag}:
    delete:
      operationId: delete_concurrency_limit_by_tag_concurrency_limits_tag__tag__delete
      parameters:
      - description: The tag name
        in: path
        name: tag
        required: true
        schema:
          description: The tag name
          title: Tag
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Concurrency Limit By Tag
      tags:
      - Concurrency Limits
    get:
      description: |-
        Get a concurrency limit by tag.

        The `active slots` field contains a list of TaskRun IDs currently using a
        concurrency slot for the specified tag.
      operationId: read_concurrency_limit_by_tag_concurrency_limits_tag__tag__get
      parameters:
      - description: The tag name
        in: path
        name: tag
        required: true
        schema:
          description: The tag name
          title: Tag
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrencyLimit'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Concurrency Limit By Tag
      tags:
      - Concurrency Limits
  /api/concurrency_limits/{id}:
    delete:
      operationId: delete_concurrency_limit_concurrency_limits__id__delete
      parameters:
      - description: The concurrency limit id
        in: path
        name: id
        required: true
        schema:
          description: The concurrency limit id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Concurrency Limit
      tags:
      - Concurrency Limits
    get:
      description: |-
        Get a concurrency limit by id.

        The `active slots` field contains a list of TaskRun IDs currently using a
        concurrency slot for the specified tag.
      operationId: read_concurrency_limit_concurrency_limits__id__get
      parameters:
      - description: The concurrency limit id
        in: path
        name: id
        required: true
        schema:
          description: The concurrency limit id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrencyLimit'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Concurrency Limit
      tags:
      - Concurrency Limits
  /api/deployments/:
    post:
      description: |-
        Gracefully creates a new deployment from the provided schema. If a deployment with
        the same name and flow_id already exists, the deployment is updated.

        If the deployment has an active schedule, flow runs will be scheduled.
        When upserting, any scheduled runs from the existing deployment will be deleted.
      operationId: create_deployment_deployments__post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Deployment
      tags:
      - Deployments
  /api/deployments/count:
    post:
      description: Count deployments.
      operationId: count_deployments_deployments_count_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_count_deployments_deployments_count_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Count Deployments Deployments Count Post
                type: integer
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Count Deployments
      tags:
      - Deployments
  /api/deployments/filter:
    post:
      description: Query for deployments.
      operationId: read_deployments_deployments_filter_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_read_deployments_deployments_filter_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Deployment'
                title: Response Read Deployments Deployments Filter Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Deployments
      tags:
      - Deployments
  /api/deployments/name/{flow_name}/{deployment_name}:
    get:
      description: Get a deployment using the name of the flow and the deployment.
      operationId: read_deployment_by_name_deployments_name__flow_name___deployment_name__get
      parameters:
      - description: The name of the flow
        in: path
        name: flow_name
        required: true
        schema:
          description: The name of the flow
          title: Flow Name
          type: string
      - description: The name of the deployment
        in: path
        name: deployment_name
        required: true
        schema:
          description: The name of the deployment
          title: Deployment Name
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Deployment By Name
      tags:
      - Deployments
  /api/deployments/{id}:
    delete:
      description: Delete a deployment by id.
      operationId: delete_deployment_deployments__id__delete
      parameters:
      - description: The deployment id
        in: path
        name: id
        required: true
        schema:
          description: The deployment id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Deployment
      tags:
      - Deployments
    get:
      description: Get a deployment by id.
      operationId: read_deployment_deployments__id__get
      parameters:
      - description: The deployment id
        in: path
        name: id
        required: true
        schema:
          description: The deployment id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Deployment
      tags:
      - Deployments
    patch:
      operationId: update_deployment_deployments__id__patch
      parameters:
      - description: The deployment id
        in: path
        name: id
        required: true
        schema:
          description: The deployment id
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentUpdate'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Deployment
      tags:
      - Deployments
  /api/deployments/{id}/create_flow_run:
    post:
      description: |-
        Create a flow run from a deployment.

        Any parameters not provided will be inferred from the deployment's parameters.
        If tags are not provided, the deployment's tags will be used.

        If no state is provided, the flow run will be created in a PENDING state.
      operationId: create_flow_run_from_deployment_deployments__id__create_flow_run_post
      parameters:
      - description: The deployment id
        in: path
        name: id
        required: true
        schema:
          description: The deployment id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentFlowRunCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowRun'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Flow Run From Deployment
      tags:
      - Deployments
  /api/deployments/{id}/schedule:
    post:
      description: Schedule runs for a deployment. For backfills, provide start/end
        times in the past.
      operationId: schedule_deployment_deployments__id__schedule_post
      parameters:
      - description: The deployment id
        in: path
        name: id
        required: true
        schema:
          description: The deployment id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_schedule_deployment_deployments__id__schedule_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Schedule Deployment Deployments  Id  Schedule Post
                type: 'null'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Schedule Deployment
      tags:
      - Deployments
  /api/deployments/{id}/set_schedule_active:
    post:
      description: Set a deployment schedule to active. Runs will be scheduled immediately.
      operationId: set_schedule_active_deployments__id__set_schedule_active_post
      parameters:
      - description: The deployment id
        in: path
        name: id
        required: true
        schema:
          description: The deployment id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Set Schedule Active Deployments  Id  Set Schedule
                  Active Post
                type: 'null'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Set Schedule Active
      tags:
      - Deployments
  /api/deployments/{id}/set_schedule_inactive:
    post:
      description: |-
        Set a deployment schedule to inactive. Any auto-scheduled runs still in a Scheduled
        state will be deleted.
      operationId: set_schedule_inactive_deployments__id__set_schedule_inactive_post
      parameters:
      - description: The deployment id
        in: path
        name: id
        required: true
        schema:
          description: The deployment id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Set Schedule Inactive Deployments  Id  Set Schedule
                  Inactive Post
                type: 'null'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Set Schedule Inactive
      tags:
      - Deployments
  /api/deployments/{id}/work_queue_check:
    get:
      description: |-
        Get list of work-queues that are able to pick up the specified deployment.

        This endpoint is intended to be used by the UI to provide users warnings
        about deployments that are unable to be executed because there are no work
        queues that will pick up their runs, based on existing filter criteria. It
        may be deprecated in the future because there is not a strict relationship
        between work queues and deployments.
      operationId: work_queue_check_for_deployment_deployments__id__work_queue_check_get
      parameters:
      - description: The deployment id
        in: path
        name: id
        required: true
        schema:
          description: The deployment id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkQueue'
                title: Response Work Queue Check For Deployment Deployments  Id  Work
                  Queue Check Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Work Queue Check For Deployment
      tags:
      - Deployments
  /api/flow_run_notification_policies/:
    post:
      description: Creates a new flow run notification policy.
      operationId: create_flow_run_notification_policy_flow_run_notification_policies__post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowRunNotificationPolicyCreate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowRunNotificationPolicy'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Flow Run Notification Policy
      tags:
      - Flow Run Notification Policies
  /api/flow_run_notification_policies/filter:
    post:
      description: Query for flow run notification policies.
      operationId: read_flow_run_notification_policies_flow_run_notification_policies_filter_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_read_flow_run_notification_policies_flow_run_notification_policies_filter_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FlowRunNotificationPolicy'
                title: Response Read Flow Run Notification Policies Flow Run Notification
                  Policies Filter Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Flow Run Notification Policies
      tags:
      - Flow Run Notification Policies
  /api/flow_run_notification_policies/{id}:
    delete:
      description: Delete a flow run notification policy by id.
      operationId: delete_flow_run_notification_policy_flow_run_notification_policies__id__delete
      parameters:
      - description: The flow run notification policy id
        in: path
        name: id
        required: true
        schema:
          description: The flow run notification policy id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Flow Run Notification Policy
      tags:
      - Flow Run Notification Policies
    get:
      description: Get a flow run notification policy by id.
      operationId: read_flow_run_notification_policy_flow_run_notification_policies__id__get
      parameters:
      - description: The flow run notification policy id
        in: path
        name: id
        required: true
        schema:
          description: The flow run notification policy id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowRunNotificationPolicy'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Flow Run Notification Policy
      tags:
      - Flow Run Notification Policies
    patch:
      description: Updates an existing flow run notification policy.
      operationId: update_flow_run_notification_policy_flow_run_notification_policies__id__patch
      parameters:
      - description: The flow run notification policy id
        in: path
        name: id
        required: true
        schema:
          description: The flow run notification policy id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowRunNotificationPolicyUpdate'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Flow Run Notification Policy
      tags:
      - Flow Run Notification Policies
  /api/flow_run_states/:
    get:
      description: Get states associated with a flow run.
      operationId: read_flow_run_states_flow_run_states__get
      parameters:
      - in: query
        name: flow_run_id
        required: true
        schema:
          format: uuid
          title: Flow Run Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/State'
                title: Response Read Flow Run States Flow Run States  Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Flow Run States
      tags:
      - Flow Run States
  /api/flow_run_states/{id}:
    get:
      description: Get a flow run state by id.
      operationId: read_flow_run_state_flow_run_states__id__get
      parameters:
      - description: The flow run state id
        in: path
        name: id
        required: true
        schema:
          description: The flow run state id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Flow Run State
      tags:
      - Flow Run States
  /api/flow_runs/:
    post:
      description: |-
        Create a flow run. If a flow run with the same flow_id and
        idempotency key already exists, the existing flow run will be returned.

        If no state is provided, the flow run will be created in a PENDING state.
      operationId: create_flow_run_flow_runs__post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowRunCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowRun'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Flow Run
      tags:
      - Flow Runs
  /api/flow_runs/count:
    post:
      description: Query for flow runs.
      operationId: count_flow_runs_flow_runs_count_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_count_flow_runs_flow_runs_count_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Count Flow Runs Flow Runs Count Post
                type: integer
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Count Flow Runs
      tags:
      - Flow Runs
  /api/flow_runs/filter:
    post:
      description: Query for flow runs.
      operationId: read_flow_runs_flow_runs_filter_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_read_flow_runs_flow_runs_filter_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FlowRun'
                title: Response Read Flow Runs Flow Runs Filter Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Flow Runs
      tags:
      - Flow Runs
  /api/flow_runs/history:
    post:
      description: Query for flow run history data across a given range and interval.
      operationId: flow_run_history_flow_runs_history_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_flow_run_history_flow_runs_history_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HistoryResponse'
                title: Response Flow Run History Flow Runs History Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Flow Run History
      tags:
      - Flow Runs
  /api/flow_runs/{id}:
    delete:
      description: Delete a flow run by id.
      operationId: delete_flow_run_flow_runs__id__delete
      parameters:
      - description: The flow run id
        in: path
        name: id
        required: true
        schema:
          description: The flow run id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Flow Run
      tags:
      - Flow Runs
    get:
      description: Get a flow run by id.
      operationId: read_flow_run_flow_runs__id__get
      parameters:
      - description: The flow run id
        in: path
        name: id
        required: true
        schema:
          description: The flow run id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowRun'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Flow Run
      tags:
      - Flow Runs
    patch:
      description: Updates a flow run.
      operationId: update_flow_run_flow_runs__id__patch
      parameters:
      - description: The flow run id
        in: path
        name: id
        required: true
        schema:
          description: The flow run id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowRunUpdate'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Flow Run
      tags:
      - Flow Runs
  /api/flow_runs/{id}/graph:
    get:
      description: Get a task run dependency map for a given flow run.
      operationId: read_flow_run_graph_flow_runs__id__graph_get
      parameters:
      - description: The flow run id
        in: path
        name: id
        required: true
        schema:
          description: The flow run id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DependencyResult'
                title: Response Read Flow Run Graph Flow Runs  Id  Graph Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Flow Run Graph
      tags:
      - Flow Runs
  /api/flow_runs/{id}/set_state:
    post:
      description: Set a flow run state, invoking any orchestration rules.
      operationId: set_flow_run_state_flow_runs__id__set_state_post
      parameters:
      - description: The flow run id
        in: path
        name: id
        required: true
        schema:
          description: The flow run id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_set_flow_run_state_flow_runs__id__set_state_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrchestrationResult'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Set Flow Run State
      tags:
      - Flow Runs
  /api/flows/:
    post:
      description: |-
        Gracefully creates a new flow from the provided schema. If a flow with the
        same name already exists, the existing flow is returned.
      operationId: create_flow_flows__post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Flow
      tags:
      - Flows
  /api/flows/count:
    post:
      description: Count flows.
      operationId: count_flows_flows_count_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_count_flows_flows_count_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Count Flows Flows Count Post
                type: integer
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Count Flows
      tags:
      - Flows
  /api/flows/filter:
    post:
      description: Query for flows.
      operationId: read_flows_flows_filter_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_read_flows_flows_filter_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Flow'
                title: Response Read Flows Flows Filter Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Flows
      tags:
      - Flows
  /api/flows/name/{name}:
    get:
      description: Get a flow by name.
      operationId: read_flow_by_name_flows_name__name__get
      parameters:
      - description: The name of the flow
        in: path
        name: name
        required: true
        schema:
          description: The name of the flow
          title: Name
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Flow By Name
      tags:
      - Flows
  /api/flows/{id}:
    delete:
      description: Delete a flow by id.
      operationId: delete_flow_flows__id__delete
      parameters:
      - description: The flow id
        in: path
        name: id
        required: true
        schema:
          description: The flow id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Flow
      tags:
      - Flows
    get:
      description: Get a flow by id.
      operationId: read_flow_flows__id__get
      parameters:
      - description: The flow id
        in: path
        name: id
        required: true
        schema:
          description: The flow id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Flow
      tags:
      - Flows
    patch:
      description: Updates a flow.
      operationId: update_flow_flows__id__patch
      parameters:
      - description: The flow id
        in: path
        name: id
        required: true
        schema:
          description: The flow id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowUpdate'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Flow
      tags:
      - Flows
  /api/health:
    get:
      operationId: health_check_health_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Health Check
  /api/hello:
    get:
      description: Say hello!
      operationId: hello_hello_get
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Hello
      tags:
      - Root
  /api/logs/:
    post:
      description: Create new logs from the provided schema.
      operationId: create_logs_logs__post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/LogCreate'
              title: Logs
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Logs
      tags:
      - Logs
  /api/logs/filter:
    post:
      description: Query for logs.
      operationId: read_logs_logs_filter_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_read_logs_logs_filter_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Log'
                title: Response Read Logs Logs Filter Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Logs
      tags:
      - Logs
  /api/saved_searches/:
    put:
      description: |-
        Gracefully creates a new saved search from the provided schema.

        If a saved search with the same name already exists, the saved search's fields are
        replaced.
      operationId: create_saved_search_saved_searches__put
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavedSearchCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedSearch'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Saved Search
      tags:
      - SavedSearches
  /api/saved_searches/filter:
    post:
      description: Query for saved searches.
      operationId: read_saved_searches_saved_searches_filter_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_read_saved_searches_saved_searches_filter_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SavedSearch'
                title: Response Read Saved Searches Saved Searches Filter Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Saved Searches
      tags:
      - SavedSearches
  /api/saved_searches/{id}:
    delete:
      description: Delete a saved search by id.
      operationId: delete_saved_search_saved_searches__id__delete
      parameters:
      - description: The saved search id
        in: path
        name: id
        required: true
        schema:
          description: The saved search id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Saved Search
      tags:
      - SavedSearches
    get:
      description: Get a saved search by id.
      operationId: read_saved_search_saved_searches__id__get
      parameters:
      - description: The saved search id
        in: path
        name: id
        required: true
        schema:
          description: The saved search id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedSearch'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Saved Search
      tags:
      - SavedSearches
  /api/task_run_states/:
    get:
      description: Get states associated with a task run.
      operationId: read_task_run_states_task_run_states__get
      parameters:
      - in: query
        name: task_run_id
        required: true
        schema:
          format: uuid
          title: Task Run Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/State'
                title: Response Read Task Run States Task Run States  Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Task Run States
      tags:
      - Task Run States
  /api/task_run_states/{id}:
    get:
      description: Get a task run state by id.
      operationId: read_task_run_state_task_run_states__id__get
      parameters:
      - description: The task run state id
        in: path
        name: id
        required: true
        schema:
          description: The task run state id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Task Run State
      tags:
      - Task Run States
  /api/task_runs/:
    post:
      description: |-
        Create a task run. If a task run with the same flow_run_id,
        task_key, and dynamic_key already exists, the existing task
        run will be returned.

        If no state is provided, the task run will be created in a PENDING state.
      operationId: create_task_run_task_runs__post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRunCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskRun'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Task Run
      tags:
      - Task Runs
  /api/task_runs/count:
    post:
      description: Count task runs.
      operationId: count_task_runs_task_runs_count_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_count_task_runs_task_runs_count_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Count Task Runs Task Runs Count Post
                type: integer
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Count Task Runs
      tags:
      - Task Runs
  /api/task_runs/filter:
    post:
      description: Query for task runs.
      operationId: read_task_runs_task_runs_filter_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_read_task_runs_task_runs_filter_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaskRun'
                title: Response Read Task Runs Task Runs Filter Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Task Runs
      tags:
      - Task Runs
  /api/task_runs/history:
    post:
      description: Query for task run history data across a given range and interval.
      operationId: task_run_history_task_runs_history_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_task_run_history_task_runs_history_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HistoryResponse'
                title: Response Task Run History Task Runs History Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Task Run History
      tags:
      - Task Runs
  /api/task_runs/{id}:
    delete:
      description: Delete a task run by id.
      operationId: delete_task_run_task_runs__id__delete
      parameters:
      - description: The task run id
        in: path
        name: id
        required: true
        schema:
          description: The task run id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Task Run
      tags:
      - Task Runs
    get:
      description: Get a task run by id.
      operationId: read_task_run_task_runs__id__get
      parameters:
      - description: The task run id
        in: path
        name: id
        required: true
        schema:
          description: The task run id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskRun'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Task Run
      tags:
      - Task Runs
  /api/task_runs/{id}/set_state:
    post:
      description: Set a task run state, invoking any orchestration rules.
      operationId: set_task_run_state_task_runs__id__set_state_post
      parameters:
      - description: The task run id
        in: path
        name: id
        required: true
        schema:
          description: The task run id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_set_task_run_state_task_runs__id__set_state_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrchestrationResult'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Set Task Run State
      tags:
      - Task Runs
  /api/ui/flow_runs/history:
    post:
      operationId: read_flow_run_history_ui_flow_runs_history_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_read_flow_run_history_ui_flow_runs_history_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SimpleFlowRun'
                title: Response Read Flow Run History Ui Flow Runs History Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Flow Run History
      tags:
      - Flow Runs
      - UI
  /api/work_queues/:
    post:
      description: |-
        Creates a new work queue.

        If a work queue with the same name already exists, an error
        will be raised.
      operationId: create_work_queue_work_queues__post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkQueueCreate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkQueue'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Work Queue
      tags:
      - Work Queues
  /api/work_queues/filter:
    post:
      description: Query for work queues.
      operationId: read_work_queues_work_queues_filter_post
      parameters:
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_read_work_queues_work_queues_filter_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkQueue'
                title: Response Read Work Queues Work Queues Filter Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Work Queues
      tags:
      - Work Queues
  /api/work_queues/name/{name}:
    get:
      description: Get a work queue by id.
      operationId: read_work_queue_by_name_work_queues_name__name__get
      parameters:
      - description: The work queue name
        in: path
        name: name
        required: true
        schema:
          description: The work queue name
          title: Name
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkQueue'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Work Queue By Name
      tags:
      - Work Queues
  /api/work_queues/{id}:
    delete:
      description: Delete a work queue by id.
      operationId: delete_work_queue_work_queues__id__delete
      parameters:
      - description: The work queue id
        in: path
        name: id
        required: true
        schema:
          description: The work queue id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Work Queue
      tags:
      - Work Queues
    get:
      description: Get a work queue by id.
      operationId: read_work_queue_work_queues__id__get
      parameters:
      - description: The work queue id
        in: path
        name: id
        required: true
        schema:
          description: The work queue id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkQueue'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Work Queue
      tags:
      - Work Queues
    patch:
      description: Updates an existing work queue.
      operationId: update_work_queue_work_queues__id__patch
      parameters:
      - description: The work queue id
        in: path
        name: id
        required: true
        schema:
          description: The work queue id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkQueueUpdate'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Work Queue
      tags:
      - Work Queues
  /api/work_queues/{id}/get_runs:
    post:
      description: Get flow runs from the work queue.
      operationId: read_work_queue_runs_work_queues__id__get_runs_post
      parameters:
      - description: The work queue id
        in: path
        name: id
        required: true
        schema:
          description: The work queue id
          format: uuid
          title: Id
          type: string
      - in: header
        name: x-prefect-api-version
        required: false
        schema:
          title: X-Prefect-Api-Version
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_read_work_queue_runs_work_queues__id__get_runs_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FlowRun'
                title: Response Read Work Queue Runs Work Queues  Id  Get Runs Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Work Queue Runs
      tags:
      - Work Queues
