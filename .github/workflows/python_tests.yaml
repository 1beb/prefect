name: Python tests

on: [pull_request]

jobs:
  run-tests-sqlite:
    name: SQLite

    strategy:
      matrix:
        python-version:
          - 3.7
          - 3.8
          - 3.9
        os: 
          - ubuntu-latest
          # - windows-latest
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          # Versioneer only generates correct versions with a full fetch
          # Versioneer is not setup for this repo yet
          # fetch-depth: 0
          persist-credentials: false

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          # Load installed python packages from the cache
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements*.txt') }}
          
      - name: Install packages
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade --upgrade-strategy eager -e .[dev]

      - name: Run tests
        env: 
          PREFECT_ORION_DATABASE_CONNECTION_URL: "sqlite+aiosqlite:///orion-tests.db"
        run: |
          pytest tests

  

  run-tests-postgres:
    name: Postgres

    strategy:
      matrix:
        python-version:
          - 3.7
          - 3.8
          - 3.9
        os: 
          - ubuntu-latest
          # windows backend doesn't support containers
          # - windows-latest
      fail-fast: false

    runs-on: ${{ matrix.os }}

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: prefect
          POSTGRES_PASSWORD: prefect
          POSTGRES_DB: orion
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
        with:
          # Versioneer only generates correct versions with a full fetch
          # Versioneer is not setup for this repo yet
          # fetch-depth: 0
          persist-credentials: false

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          # Load installed python packages from the cache
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements*.txt') }}

      - name: Install packages
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade --upgrade-strategy eager -e .[dev]

      - name: Run tests
        env: 
          PREFECT_ORION_DATABASE_CONNECTION_URL: 'postgresql+asyncpg://prefect:prefect@localhost/orion'
        run: |
          pytest tests


  run-tests-lower-bounds:
    name: Lower bound requirements

    # Note we're running on Ubuntu LTS instead of latest
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install minimum sqlite3 version
        run: |
          apt-get update
          apt-get install -y tcl
          wget https://github.com/sqlite/sqlite/archive/refs/tags/version-3.24.0.tar.gz
          tar xzf version-3.24.0.tar.gz
          cd sqlite-version-3.24.0/
          export CFLAGS="-DSQLITE_ENABLE_FTS3 \
              -DSQLITE_ENABLE_FTS3_PARENTHESIS \
              -DSQLITE_ENABLE_FTS4 \
              -DSQLITE_ENABLE_FTS5 \
              -DSQLITE_ENABLE_JSON1 \
              -DSQLITE_ENABLE_LOAD_EXTENSION \
              -DSQLITE_ENABLE_RTREE \
              -DSQLITE_ENABLE_STAT4 \
              -DSQLITE_ENABLE_UPDATE_DELETE_LIMIT \
              -DSQLITE_SOUNDEX \
              -DSQLITE_TEMP_STORE=3 \
              -DSQLITE_USE_URI \
              -O2 \
              -fPIC"
          export PREFIX="/usr/local"
          LIBS="-lm" ./configure --disable-tcl --enable-shared --enable-tempstore=always --prefix="$PREFIX"
          make
          make install
          ln -sf /usr/local/lib/libsqlite3.so /usr/lib/x86_64-linux-gnu/libsqlite3.so

      - name: Generate lower bound python requirements
        # Creates lower bound files then replaces the input files so we can do a normal install
        run: |
          ./scripts/generate-lower-bounds.py requirements.txt > requirements-lower.txt
          ./scripts/generate-lower-bounds.py requirements-dev.txt > requirements-dev-lower.txt
          mv requirements-lower.txt requirements.txt
          mv requirements-dev-lower.txt requirements-dev.txt

      - name: Install packages
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run tests
        env:
          PREFECT_ORION_DATABASE_CONNECTION_URL: "sqlite+aiosqlite:///orion-tests.db"
        run: |
          
          pytest tests -x
