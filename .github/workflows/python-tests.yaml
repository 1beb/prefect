name: Python tests

on:
  pull_request:
    paths:
      - .github/workflows/python-tests.yaml
      - "**/*.py"
      - requirements.txt
      - requirements-dev.txt
  push:
    branches:
      - main

env:
  MINIMUM_PYTHON_VERSION: "3.7"


jobs:
  run-tests-sqlite:
    name: Test with SQLite

    strategy:
      matrix:
        python-version:
          - "3.7"
          # - "3.8"
          # - "3.9"
          # - "3.10"
        os:
          - ubuntu-latest
        test-options:
          - ""
          - "--only-services"

        # Docker image builds are required for service tests but not regular tests
        include:
          - test-options: ""
            docker-images: false
          - test-options: "--only-services"
            docker-images: true

      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Docker Buildx
        if: ${{ matrix.docker-images }}
        uses: docker/setup-buildx-action@v1

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build test images
        if: ${{ matrix.docker-images }}
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            PYTHON_VERSION=${{ matrix.python-version }}
            PREFECT_EXTRAS=[dev]
          tags: prefecthq/prefect:dev-python${{ matrix.python-version }}
          outputs: type=docker,dest=/tmp/image.tar

      - name: Test docker image
        if: ${{ matrix.docker-images }}
        run: |
          docker load --input /tmp/image.tar
          docker run --rm prefecthq/prefect:dev-python${{ matrix.python-version }} prefect version

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "requirements*.txt"

      - name: Install packages
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade --upgrade-strategy eager -e .[dev]

      - name: Run tests
        env:
          PREFECT_ORION_DATABASE_CONNECTION_URL: "sqlite+aiosqlite:///./orion-tests.db"
        run: |
          pytest tests -vv  ${{ matrix.test-options }}

  # run-tests-postgres:
  #   name: Test with Postgres

  #   strategy:
  #     matrix:
  #       python-version:
  #         - "3.7"
  #         - "3.8"
  #         - "3.9"
  #         - "3.10"
  #       os:
  #         - ubuntu-latest
  #         # windows backend doesn't support containers
  #         # - windows-latest
  #     fail-fast: false

  #   runs-on: ${{ matrix.os }}

  #   services:
  #     postgres:
  #       image: postgres:13
  #       env:
  #         POSTGRES_USER: prefect
  #         POSTGRES_PASSWORD: prefect
  #         POSTGRES_DB: orion
  #       ports:
  #         - 5432:5432
  #       options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         persist-credentials: false
  #         fetch-depth: 0

  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #         cache: "pip"
  #         cache-dependency-path: "requirements*.txt"

  #     - name: Install packages
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install --upgrade --upgrade-strategy eager -e .[dev]

  #     - name: Run tests
  #       env:
  #         PREFECT_ORION_DATABASE_CONNECTION_URL: "postgresql+asyncpg://prefect:prefect@localhost/orion"
  #       run: |
  #         pytest tests --all-services --not-service ray -vv

  # run-tests-lower-bounds:
  #   name: Test with lower requirements
  #   # We cannot test on Ubuntu LTS because the sqlite version is not new enough
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         persist-credentials: false
  #         fetch-depth: 0

  #     - name: Set up Python ${{ env.MINIMUM_PYTHON_VERSION }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ env.MINIMUM_PYTHON_VERSION }}

  #     - name: Generate lower bound python requirements
  #       # Creates lower bound files then replaces the input files so we can do a normal install
  #       run: |
  #         ./scripts/generate-lower-bounds.py requirements.txt > requirements-lower.txt
  #         ./scripts/generate-lower-bounds.py requirements-dev.txt > requirements-dev-lower.txt
  #         mv requirements-lower.txt requirements.txt
  #         mv requirements-dev-lower.txt requirements-dev.txt

  #     - name: Install packages
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -e .[dev]

  #     - name: Run tests
  #       env:
  #         PREFECT_ORION_DATABASE_CONNECTION_URL: "sqlite+aiosqlite:///./orion-tests.db"
  #       run: |
  #         pytest tests -vv
