name: Python tests

on:
  pull_request:
   paths:
      - .github/workflows/python_tests.yaml
      - '**/*.py'
      - 'requirements.txt'
      - 'requirements-dev.txt'
  push:
    branches:
      - "main"

env:
  MINIMUM_PYTHON_VERSION: 3.7

jobs:
  run-tests-sqlite:
    name: Test with SQLite
    needs: [build-test-images]

    strategy:
      matrix:
        python-version:
          - 3.7
          - 3.8
          - 3.9
        os:
          - ubuntu-latest
          # - windows-latest
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'requirements*.txt'

      - name: Install packages
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade --upgrade-strategy eager -e .[dev]

      - name: Download Docker image artifact
        uses: actions/download-artifact@v2
        with:
          name: image-${{ github.sha }}-${{ matrix.python-version }}
          path: /tmp

      - name: Load Docker image
        run:
          docker load --input /tmp/image.tar

      - name: Run tests
        env:
          PREFECT_ORION_DATABASE_CONNECTION_URL: "sqlite+aiosqlite:///./orion-tests.db"
        run: |
          pytest tests --all-services -vv



  run-tests-postgres:
    name: Test with Postgres
    needs: [build-test-images]

    strategy:
      matrix:
        python-version:
          - 3.7
          - 3.8
          - 3.9
        os:
          - ubuntu-latest
          # windows backend doesn't support containers
          # - windows-latest
      fail-fast: false

    runs-on: ${{ matrix.os }}

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: prefect
          POSTGRES_PASSWORD: prefect
          POSTGRES_DB: orion
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'requirements*.txt'

      - name: Install packages
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade --upgrade-strategy eager -e .[dev]

      - name: Download Docker image artifact
        uses: actions/download-artifact@v2
        with:
          name: image-${{ github.sha }}-${{ matrix.python-version }}
          path: /tmp

      - name: Load Docker image
        run:
          docker load --input /tmp/image.tar

      - name: Run tests
        env:
          PREFECT_ORION_DATABASE_CONNECTION_URL: 'postgresql+asyncpg://prefect:prefect@localhost/orion'
        run: |
          pytest tests --all-services -vv


  run-tests-lower-bounds:
    name: Test with lower requirements
    needs: [build-test-images]
    # We cannot test on Ubuntu LTS because the sqlite version is not new enough
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python ${{ env.MINIMUM_PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.MINIMUM_PYTHON_VERSION }}

      - name: Generate lower bound python requirements
        # Creates lower bound files then replaces the input files so we can do a normal install
        run: |
          ./scripts/generate-lower-bounds.py requirements.txt > requirements-lower.txt
          ./scripts/generate-lower-bounds.py requirements-dev.txt > requirements-dev-lower.txt
          mv requirements-lower.txt requirements.txt
          mv requirements-dev-lower.txt requirements-dev.txt

      - name: Install packages
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Download Docker image artifact
        uses: actions/download-artifact@v2
        with:
          name: image-${{ github.sha }}-${{ env.MINIMUM_PYTHON_VERSION }}
          path: /tmp

      - name: Load Docker image
        run:
          docker load --input /tmp/image.tar

      - name: Run tests
        env:
          PREFECT_ORION_DATABASE_CONNECTION_URL: "sqlite+aiosqlite:///./orion-tests.db"
        run: |
          pytest tests --all-services -vv
